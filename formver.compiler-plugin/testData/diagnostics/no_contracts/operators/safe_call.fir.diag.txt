/safe_call.kt:(142,154): info: Generated Viper text for testSafeCall:
field bf_x: Ref

method f_f_TF_T_Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_testSafeCall_TF_NT_Foo(foo: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_nullable(df_unitType()))
{
  inhale df_isSubtype(df_typeOf(foo), df_nullable(df_c_Foo()))
  inhale foo != df_nullValue() ==> acc(p_shared(foo), wildcard)
  if (foo != df_nullValue()) {
    var anon_0: Ref
    anon_0 := f_f_TF_T_Foo(foo)
    ret_0 := anon_0
  } else {
    ret_0 := df_nullValue()}
  goto lbl_0
  label lbl_0
}

/safe_call.kt:(217,240): info: Generated Viper text for testSafeCallNonNullable:
field bf_x: Ref

method f_f_TF_T_Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_testSafeCallNonNullable_TF_T_Foo(foo: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_nullable(df_unitType()))
{
  inhale df_isSubtype(df_typeOf(foo), df_c_Foo())
  inhale acc(p_shared(foo), wildcard)
  if (foo != df_nullValue()) {
    var anon_0: Ref
    anon_0 := f_f_TF_T_Foo(foo)
    ret_0 := anon_0
  } else {
    ret_0 := df_nullValue()}
  goto lbl_0
  label lbl_0
}

/safe_call.kt:(267,287): info: Generated Viper text for testSafeCallProperty:
field bf_x: Ref

method f_testSafeCallProperty_TF_NT_Foo(foo: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_nullable(df_intType()))
{
  inhale df_isSubtype(df_typeOf(foo), df_nullable(df_c_Foo()))
  inhale foo != df_nullValue() ==> acc(p_shared(foo), wildcard)
  if (foo != df_nullValue()) {
    var anon_0: Ref
    unfold acc(p_shared(foo), wildcard)
    anon_0 := foo.bf_x
    ret_0 := anon_0
  } else {
    ret_0 := df_nullValue()}
  goto lbl_0
  label lbl_0
}

/safe_call.kt:(354,385): info: Generated Viper text for testSafeCallPropertyNonNullable:
field bf_x: Ref

method f_testSafeCallPropertyNonNullable_TF_T_Foo(foo: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_nullable(df_intType()))
{
  inhale df_isSubtype(df_typeOf(foo), df_c_Foo())
  inhale acc(p_shared(foo), wildcard)
  if (foo != df_nullValue()) {
    var anon_0: Ref
    unfold acc(p_shared(foo), wildcard)
    anon_0 := foo.bf_x
    ret_0 := anon_0
  } else {
    ret_0 := df_nullValue()}
  goto lbl_0
  label lbl_0
}

/safe_call.kt:(493,506): info: Generated Viper text for safeCallChain:
field bf_v: Ref

method f_nullable_TF_T_Rec(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_nullable(df_c_Rec()))
  ensures ret != df_nullValue() ==> acc(p_shared(ret), wildcard)


method f_safeCallChain_TF_NT_Rec(rec: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_nullable(df_intType()))
{
  var anon_0: Ref
  var anon_1: Ref
  inhale df_isSubtype(df_typeOf(rec), df_nullable(df_c_Rec()))
  inhale rec != df_nullValue() ==> acc(p_shared(rec), wildcard)
  if (rec != df_nullValue()) {
    anon_1 := f_nullable_TF_T_Rec(rec)
  } else {
    anon_1 := df_nullValue()}
  if (anon_1 != df_nullValue()) {
    anon_0 := f_nullable_TF_T_Rec(anon_1)
  } else {
    anon_0 := df_nullValue()}
  if (anon_0 != df_nullValue()) {
    var anon_2: Ref
    unfold acc(p_shared(anon_0), wildcard)
    anon_2 := anon_0.bf_v
    ret_0 := anon_2
  } else {
    ret_0 := df_nullValue()}
  goto lbl_0
  label lbl_0
}

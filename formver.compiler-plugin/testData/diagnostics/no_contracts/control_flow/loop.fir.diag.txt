/loop.kt:(23,32): info: Generated Viper text for whileLoop:
method f_whileLoop_TF_T_Boolean(b: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_boolType())
{
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(b), df_boolType())
  label lbl_continue_0
    invariant df_isSubtype(df_typeOf(b), df_boolType())
  anon_0 := b
  if (df_boolFromRef(anon_0)) {
    var a: Ref
    var c: Ref
    a := df_intToRef(1)
    c := df_intToRef(2)
    goto lbl_continue_0
  }
  label lbl_break_0
  assert df_isSubtype(df_typeOf(b), df_boolType())
  ret_0 := df_boolToRef(false)
  goto lbl_ret_0
  label lbl_ret_0
}

/loop.kt:(138,160): info: Generated Viper text for whileFunctionCondition:
method f_whileFunctionCondition_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  label lbl_continue_0
  anon_0 := f_whileLoop_TF_T_Boolean(df_boolToRef(true))
  if (df_boolFromRef(anon_0)) {
    goto lbl_continue_0
  }
  label lbl_break_0
  label lbl_ret_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_whileLoop_TF_T_Boolean(b: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_boolType())

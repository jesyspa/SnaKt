/inheritance.kt:(93,97): info: Generated Viper text for getY:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

method f_getY_TF_T_Foo(this$dispatch: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(this$dispatch), df_c_Foo())
  inhale acc(p_shared(this$dispatch), wildcard)
  unfold acc(p_shared(this$dispatch), wildcard)
  ret_0 := this$dispatch.bf_y
  goto lbl_0
  label lbl_0
}

/inheritance.kt:(190,193): info: Generated Viper text for sum:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

field bf_z: Ref

method f_sum_TF_T_Bar(this$dispatch: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var anon_0: Ref
  var anon_1: Ref
  inhale df_isSubtype(df_typeOf(this$dispatch), df_c_Bar())
  inhale acc(p_c_Bar_shared(this$dispatch), wildcard)
  unfold acc(p_c_Bar_shared(this$dispatch), wildcard)
  unfold acc(p_c_Foo_shared(this$dispatch), wildcard)
  anon_0 := this$dispatch.bf_x
  unfold acc(p_c_Bar_shared(this$dispatch), wildcard)
  anon_1 := this$dispatch.bf_z
  ret_0 := sp_plusInts(anon_0, anon_1)
  goto lbl_0
  label lbl_0
}

/inheritance.kt:(236,251): info: Generated Viper text for callSuperMethod:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

field bf_z: Ref

method f_callSuperMethod_TF_T_Bar(bar: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(bar), df_c_Bar())
  inhale acc(p_c_Bar_shared(bar), wildcard)
  ret_0 := f_getY_TF_T_Foo(bar)
  goto lbl_0
  label lbl_0
}

method f_getY_TF_T_Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_intType())


/inheritance.kt:(298,314): info: Generated Viper text for accessSuperField:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

field bf_z: Ref

method f_accessSuperField_TF_T_Bar(bar: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_boolType())
{
  inhale df_isSubtype(df_typeOf(bar), df_c_Bar())
  inhale acc(p_c_Bar_shared(bar), wildcard)
  inhale acc(bar.bf_b, write)
  ret_0 := bar.bf_b
  exhale acc(bar.bf_b, write)
  inhale df_isSubtype(df_typeOf(ret_0), df_boolType())
  goto lbl_0
  label lbl_0
}

/inheritance.kt:(360,374): info: Generated Viper text for accessNewField:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

field bf_z: Ref

method f_accessNewField_TF_T_Bar(bar: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(bar), df_c_Bar())
  inhale acc(p_c_Bar_shared(bar), wildcard)
  unfold acc(p_c_Bar_shared(bar), wildcard)
  ret_0 := bar.bf_z
  goto lbl_0
  label lbl_0
}

/inheritance.kt:(416,429): info: Generated Viper text for callNewMethod:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

field bf_z: Ref

method f_callNewMethod_TF_T_Bar(bar: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(bar), df_c_Bar())
  inhale acc(p_c_Bar_shared(bar), wildcard)
  ret_0 := f_sum_TF_T_Bar(bar)
  goto lbl_0
  label lbl_0
}

method f_sum_TF_T_Bar(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_intType())


/inheritance.kt:(475,488): info: Generated Viper text for setSuperField:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

field bf_z: Ref

method f_setSuperField_TF_T_Bar(bar: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(bar), df_c_Bar())
  inhale acc(p_c_Bar_shared(bar), wildcard)
  inhale acc(bar.bf_b, write)
  bar.bf_b := df_boolToRef(true)
  exhale acc(bar.bf_b, write)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/inheritance.kt:(525,546): info: Generated Viper text for accessSuperSuperField:
field bf_b: Ref

field bf_x: Ref

field bf_y: Ref

field bf_z: Ref

method f_accessSuperSuperField_TF_T_Baz(baz: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(baz), df_c_Baz())
  inhale acc(p_c_Baz_shared(baz), wildcard)
  unfold acc(p_c_Baz_shared(baz), wildcard)
  unfold acc(p_c_Bar_shared(baz), wildcard)
  unfold acc(p_c_Foo_shared(baz), wildcard)
  ret_0 := baz.bf_x
  goto lbl_0
  label lbl_0
}

/secondary_constructors.kt:(249,271): info: Generated Viper text for onlySecondConstructors:
field bf_a: Ref

method con_T_Boolean(b: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_NoPrimaryConstructor())
  ensures acc(p_shared(ret), wildcard)
  ensures acc(p_unique(ret), write)


method con_T_Int(n: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_NoPrimaryConstructor())
  ensures acc(p_shared(ret), wildcard)
  ensures acc(p_unique(ret), write)


method f_onlySecondConstructors_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var npc1: Ref
  var npc2: Ref
  npc1 := con_T_Boolean(df_boolToRef(true))
  npc2 := con_T_Int(df_intToRef(42))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/secondary_constructors.kt:(365,392): info: Generated Viper text for primaryAndSecondConstructor:
field bf_a: Ref

method con_T_Boolean(b: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_BothConstructors())
  ensures acc(p_shared(ret), wildcard)
  ensures acc(p_unique(ret), write)


method con_T_Int(a: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_BothConstructors())
  ensures acc(p_shared(ret), wildcard)
  ensures acc(p_unique(ret), write)
  ensures df_intFromRef((unfolding acc(p_shared(ret), wildcard) in
      ret.bf_a)) ==
    df_intFromRef(a)


method f_primaryAndSecondConstructor_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var bc1: Ref
  var bc2: Ref
  bc1 := con_T_Boolean(df_boolToRef(false))
  bc2 := con_T_Int(df_intToRef(42))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/member_functions.kt:(51,60): info: Generated Viper text for memberFun:
field bf_x: Ref

method f_memberFun_TF_T_Foo(this$dispatch: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(this$dispatch), df_c_Foo())
  inhale acc(p_shared(this$dispatch), wildcard)
  unfold acc(p_shared(this$dispatch), wildcard)
  ret_0 := this$dispatch.bf_x
  goto lbl_0
  label lbl_0
}

/member_functions.kt:(102,115): info: Generated Viper text for callMemberFun:
field bf_x: Ref

method f_callMemberFun_TF_T_Foo(this$dispatch: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(this$dispatch), df_c_Foo())
  inhale acc(p_shared(this$dispatch), wildcard)
  anon_0 := f_memberFun_TF_T_Foo(this$dispatch)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_memberFun_TF_T_Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_intType())


/member_functions.kt:(155,166): info: Generated Viper text for siblingCall:
field bf_x: Ref

method f_memberFun_TF_T_Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_intType())


method f_siblingCall_TF_T_Foo$T_Foo(this$dispatch: Ref, other: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(this$dispatch), df_c_Foo())
  inhale acc(p_shared(this$dispatch), wildcard)
  inhale df_isSubtype(df_typeOf(other), df_c_Foo())
  inhale acc(p_shared(other), wildcard)
  anon_0 := f_memberFun_TF_T_Foo(other)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/member_functions.kt:(220,238): info: Generated Viper text for outerMemberFunCall:
field bf_x: Ref

method f_memberFun_TF_T_Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_intType())


method f_outerMemberFunCall_TF_T_Foo(f: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(f), df_c_Foo())
  inhale acc(p_shared(f), wildcard)
  anon_0 := f_memberFun_TF_T_Foo(f)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

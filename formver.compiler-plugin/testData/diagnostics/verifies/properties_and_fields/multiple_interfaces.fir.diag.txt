/multiple_interfaces.kt:(799,804): info: Generated Viper text for take1:
method f_take1_TF_T_InterfaceWithImplementation1(obj: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  var anon_1: Ref
  inhale df_isSubtype(df_typeOf(obj), df_c_InterfaceWithImplementation1())
  inhale acc(p_shared(obj), wildcard)
  anon_1 := pg_field(obj)
  anon_0 := anon_1
  inhale df_isSubtype(df_typeOf(anon_0), df_intType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method pg_field(this$dispatch: Ref) returns (ret: Ref)


/multiple_interfaces.kt:(863,868): info: Generated Viper text for take2:
method f_take2_TF_T_InterfaceWithoutImplementation2(obj: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  var anon_1: Ref
  inhale df_isSubtype(df_typeOf(obj), df_c_InterfaceWithoutImplementation2())
  inhale acc(p_shared(obj), wildcard)
  anon_1 := pg_field(obj)
  anon_0 := anon_1
  inhale df_isSubtype(df_typeOf(anon_0), df_intType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method pg_field(this$dispatch: Ref) returns (ret: Ref)


/multiple_interfaces.kt:(930,935): info: Generated Viper text for take3:
field bf_field: Ref

method f_take3_TF_T_AbstractWithFinalImplementation3(obj: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(obj), df_c_AbstractWithFinalImplementation3())
  inhale acc(p_shared(obj), wildcard)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/multiple_interfaces.kt:(998,1003): info: Generated Viper text for take4:
method f_take4_TF_T_AbstractWithOpenImplementation4(obj: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  var anon_1: Ref
  inhale df_isSubtype(df_typeOf(obj), df_c_AbstractWithOpenImplementation4())
  inhale acc(p_shared(obj), wildcard)
  anon_1 := pg_field(obj)
  anon_0 := anon_1
  inhale df_isSubtype(df_typeOf(anon_0), df_intType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method pg_field(this$dispatch: Ref) returns (ret: Ref)


/multiple_interfaces.kt:(1683,1694): info: Generated Viper text for createImpls:
field bf_field: Ref

field bf_size: Ref

method con_c_Impl12_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Impl12())
  ensures acc(p_c_Impl12_shared(ret), wildcard)
  ensures acc(p_c_Impl12_unique(ret), write)


method con_c_Impl14_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Impl14())
  ensures acc(p_c_Impl14_shared(ret), wildcard)
  ensures acc(p_c_Impl14_unique(ret), write)


method con_c_Impl23_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Impl23())
  ensures acc(p_c_Impl23_shared(ret), wildcard)
  ensures acc(p_c_Impl23_unique(ret), write)


method con_c_Impl24_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Impl24())
  ensures acc(p_c_Impl24_shared(ret), wildcard)
  ensures acc(p_c_Impl24_unique(ret), write)


method con_c_Impl3_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Impl3())
  ensures acc(p_c_Impl3_shared(ret), wildcard)
  ensures acc(p_c_Impl3_unique(ret), write)


method f_create6_TF_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_InheritingInterfaceWithoutImplementation6())
  ensures acc(p_c_InheritingInterfaceWithoutImplementation6_shared(ret), wildcard)


method f_createImpls_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var impl12: Ref
  var start12: Ref
  var anon_0: Ref
  var anon_1: Ref
  var anon_2: Ref
  var impl23: Ref
  var start23: Ref
  var anon_3: Ref
  var anon_4: Ref
  var anon_5: Ref
  var impl3: Ref
  var start3: Ref
  var anon_6: Ref
  var anon_7: Ref
  var impl24: Ref
  var start24: Ref
  var anon_8: Ref
  var anon_9: Ref
  var anon_10: Ref
  var anon_11: Ref
  var impl14: Ref
  var start14: Ref
  var anon_12: Ref
  var anon_13: Ref
  var anon_14: Ref
  var impl6: Ref
  var start6: Ref
  var anon_15: Ref
  var anon_16: Ref
  var cond1: Ref
  var anon_17: Ref
  var cond2: Ref
  var anon_18: Ref
  var cond3: Ref
  var anon_19: Ref
  var cond4: Ref
  var anon_20: Ref
  var cond5: Ref
  impl12 := con_c_Impl12_()
  unfold acc(p_c_Impl12_shared(impl12), wildcard)
  anon_0 := impl12.bf_field
  start12 := sp_minusInts(sp_plusInts(anon_0, df_intToRef(1)), df_intToRef(1))
  anon_1 := f_take1_TF_T_InterfaceWithImplementation1(impl12)
  anon_2 := f_take2_TF_T_InterfaceWithoutImplementation2(impl12)
  impl23 := con_c_Impl23_()
  unfold acc(p_c_Impl23_shared(impl23), wildcard)
  unfold acc(p_c_AbstractWithFinalImplementation3_shared(impl23), wildcard)
  anon_3 := impl23.bf_field
  start23 := sp_minusInts(sp_plusInts(anon_3, df_intToRef(1)), df_intToRef(1))
  anon_4 := f_take2_TF_T_InterfaceWithoutImplementation2(impl23)
  anon_5 := f_take3_TF_T_AbstractWithFinalImplementation3(impl23)
  impl3 := con_c_Impl3_()
  unfold acc(p_c_Impl3_shared(impl3), wildcard)
  unfold acc(p_c_AbstractWithFinalImplementation3_shared(impl3), wildcard)
  anon_6 := impl3.bf_field
  start3 := sp_minusInts(sp_plusInts(anon_6, df_intToRef(1)), df_intToRef(1))
  anon_7 := f_take3_TF_T_AbstractWithFinalImplementation3(impl3)
  impl24 := con_c_Impl24_()
  anon_9 := pg_public_field(impl24)
  anon_8 := anon_9
  inhale df_isSubtype(df_typeOf(anon_8), df_intType())
  start24 := sp_minusInts(sp_plusInts(anon_8, df_intToRef(1)), df_intToRef(1))
  anon_10 := f_take2_TF_T_InterfaceWithoutImplementation2(impl24)
  anon_11 := f_take4_TF_T_AbstractWithOpenImplementation4(impl24)
  impl14 := con_c_Impl14_()
  unfold acc(p_c_Impl14_shared(impl14), wildcard)
  anon_12 := impl14.bf_field
  start14 := sp_minusInts(sp_plusInts(anon_12, df_intToRef(1)), df_intToRef(1))
  anon_13 := f_take1_TF_T_InterfaceWithImplementation1(impl14)
  anon_14 := f_take4_TF_T_AbstractWithOpenImplementation4(impl14)
  impl6 := f_create6_TF_()
  anon_16 := pg_public_field(impl6)
  anon_15 := anon_16
  inhale df_isSubtype(df_typeOf(anon_15), df_intType())
  start6 := sp_minusInts(sp_plusInts(anon_15, df_intToRef(1)), df_intToRef(1))
  unfold acc(p_c_Impl12_shared(impl12), wildcard)
  anon_17 := impl12.bf_field
  cond1 := df_boolToRef(df_intFromRef(start12) == df_intFromRef(anon_17))
  unfold acc(p_c_Impl23_shared(impl23), wildcard)
  unfold acc(p_c_AbstractWithFinalImplementation3_shared(impl23), wildcard)
  anon_18 := impl23.bf_field
  cond2 := df_boolToRef(df_intFromRef(start23) == df_intFromRef(anon_18))
  unfold acc(p_c_Impl3_shared(impl3), wildcard)
  unfold acc(p_c_AbstractWithFinalImplementation3_shared(impl3), wildcard)
  anon_19 := impl3.bf_field
  cond3 := df_boolToRef(df_intFromRef(start3) == df_intFromRef(anon_19))
  unfold acc(p_c_Impl14_shared(impl14), wildcard)
  anon_20 := impl14.bf_field
  cond4 := df_boolToRef(df_intFromRef(start14) == df_intFromRef(anon_20))
  cond5 := df_boolToRef(df_isSubtype(df_typeOf(start6), df_intType()))
  assert df_boolFromRef(cond1)
  assert df_boolFromRef(cond2)
  assert df_boolFromRef(cond3)
  assert df_boolFromRef(cond4)
  assert df_boolFromRef(cond5)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_take1_TF_T_InterfaceWithImplementation1(obj: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_take2_TF_T_InterfaceWithoutImplementation2(obj: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_take3_TF_T_AbstractWithFinalImplementation3(obj: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_take4_TF_T_AbstractWithOpenImplementation4(obj: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method pg_public_field(this$dispatch: Ref) returns (ret: Ref)

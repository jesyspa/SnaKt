/and_or_then.kt:(64,75): info: Generated Viper text for resultOrArg:
method f_resultOrArg_TF_T_Boolean(arg: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_boolType())
  ensures df_boolFromRef(ret_0) || df_boolFromRef(arg)
{
  inhale df_isSubtype(df_typeOf(arg), df_boolType())
  ret_0 := sp_notBool(arg)
  goto lbl_0
  label lbl_0
}

/and_or_then.kt:(200,211): info: Generated Viper text for testImplies:
method f_testImplies_TF_T_Boolean(arg: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_boolType())
  ensures df_boolFromRef(arg) ==> !df_boolFromRef(ret_0)
  ensures df_boolFromRef(ret_0) ==> !df_boolFromRef(arg)
  ensures !df_boolFromRef(arg) ==> df_boolFromRef(ret_0)
  ensures !df_boolFromRef(ret_0) ==> df_boolFromRef(arg)
{
  inhale df_isSubtype(df_typeOf(arg), df_boolType())
  ret_0 := sp_notBool(arg)
  goto lbl_0
  label lbl_0
}

/and_or_then.kt:(417,424): info: Generated Viper text for testAnd:
method f_testAnd_TF_T_Boolean$T_Boolean(p_arg1: Ref, p_arg2: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_boolType())
  ensures df_boolFromRef(ret_0) ==>
    df_boolFromRef(p_arg1) && df_boolFromRef(p_arg2)
  ensures !df_boolFromRef(ret_0) ==>
    !df_boolFromRef(p_arg1) || !df_boolFromRef(p_arg2)
  ensures df_boolFromRef(p_arg1) && df_boolFromRef(p_arg2) ==>
    df_boolFromRef(ret_0)
  ensures !df_boolFromRef(p_arg1) ==> !df_boolFromRef(ret_0)
  ensures !df_boolFromRef(p_arg2) ==> !df_boolFromRef(ret_0)
{
  inhale df_isSubtype(df_typeOf(p_arg1), df_boolType())
  inhale df_isSubtype(df_typeOf(p_arg2), df_boolType())
  if (df_boolFromRef(p_arg1)) {
    ret_0 := p_arg2
  } else {
    ret_0 := df_boolToRef(false)}
  goto lbl_0
  label lbl_0
}

/assert_statements.kt:(63,67): info: Generated Viper text for test:
field bf_size: Ref

method f_test_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var x: Ref
  var anon_1: Ref
  var anon_0: Ref
  var anon_2: Ref
  x := df_intToRef(42)
  assert true
  assert false
  assert 2 <= df_intFromRef(x)
  anon_0 := x
  x := sp_plusInts(anon_0, df_intToRef(1))
  anon_1 := anon_0
  assert df_intFromRef(anon_1) < 43
  x := sp_plusInts(x, df_intToRef(1))
  anon_2 := x
  assert df_intFromRef(anon_2) < 43
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/assert_statements.kt:(160,166): error: Assert condition is impure

/assert_statements.kt:(168,174): error: Assert condition is impure

/assert_statements.kt:(196,206): info: Generated Viper text for testImpure:
field bf_size: Ref

method f_testImpure_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var x: Ref
  var anon_0: Ref
  x := df_intToRef(42)
  x := sp_plusInts(x, df_intToRef(1))
  anon_0 := x
  assert df_intFromRef(anon_0) < 43
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/assert_statements.kt:(237,243): error: Assert condition is impure

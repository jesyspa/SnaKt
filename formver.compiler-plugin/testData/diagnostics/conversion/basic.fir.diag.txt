/basic.kt:(23,33): info: Generated Viper text for returnUnit:
method f_returnUnit_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/basic.kt:(43,52): info: Generated Viper text for returnInt:
method f_returnInt_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  ret_0 := df_intToRef(0)
  goto lbl_0
  label lbl_0
}

/basic.kt:(77,94): info: Generated Viper text for takeIntReturnUnit:
method f_takeIntReturnUnit_TF_T_Int(x: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(x), df_intType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/basic.kt:(140,156): info: Generated Viper text for takeIntReturnInt:
method f_takeIntReturnInt_TF_T_Int(x: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(x), df_intType())
  ret_0 := x
  goto lbl_0
  label lbl_0
}

/basic.kt:(187,207): info: Generated Viper text for takeIntReturnIntExpr:
method f_takeIntReturnIntExpr_TF_T_Int(x: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(x), df_intType())
  ret_0 := x
  goto lbl_0
  label lbl_0
}

/basic.kt:(229,247): info: Generated Viper text for withIntDeclaration:
method f_withIntDeclaration_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var x: Ref
  x := df_intToRef(0)
  ret_0 := x
  goto lbl_0
  label lbl_0
}

/basic.kt:(290,303): info: Generated Viper text for intAssignment:
method f_intAssignment_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var x: Ref
  x := df_intToRef(0)
  x := df_intToRef(1)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

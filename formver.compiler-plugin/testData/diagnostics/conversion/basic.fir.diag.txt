/basic.kt:(23,33): info: Generated Viper text for returnUnit:
method f$returnUnit$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/basic.kt:(43,52): info: Generated Viper text for returnInt:
method f$returnInt$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  ret$0 := df$intToRef(0)
  goto lbl$0
  label lbl$0
}

/basic.kt:(77,94): info: Generated Viper text for takeIntReturnUnit:
method f$takeIntReturnUnit$TF$T$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  inhale df$isSubtype(df$typeOf(x), df$intType())
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/basic.kt:(140,156): info: Generated Viper text for takeIntReturnInt:
method f$takeIntReturnInt$TF$T$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  inhale df$isSubtype(df$typeOf(x), df$intType())
  ret$0 := x
  goto lbl$0
  label lbl$0
}

/basic.kt:(187,207): info: Generated Viper text for takeIntReturnIntExpr:
method f$takeIntReturnIntExpr$TF$T$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  inhale df$isSubtype(df$typeOf(x), df$intType())
  ret$0 := x
  goto lbl$0
  label lbl$0
}

/basic.kt:(229,247): info: Generated Viper text for withIntDeclaration:
method f$withIntDeclaration$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  var x: Ref
  x := df$intToRef(0)
  ret$0 := x
  goto lbl$0
  label lbl$0
}

/basic.kt:(290,303): info: Generated Viper text for intAssignment:
method f$intAssignment$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var x: Ref
  x := df$intToRef(0)
  x := df$intToRef(1)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

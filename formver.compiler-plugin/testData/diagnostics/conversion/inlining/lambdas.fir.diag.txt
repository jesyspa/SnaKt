/lambdas.kt:(155,166): info: Generated Viper text for explicitArg:
method f$explicitArg$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  var ret$1: Ref
  var ret$2: Ref
  var anon$0: Ref
  anon$0 := df$intToRef(0)
  ret$2 := sp$plusInts(anon$0, anon$0)
  goto lbl$2
  label lbl$2
  ret$1 := ret$2
  goto lbl$1
  label lbl$1
  ret$0 := ret$1
  goto lbl$0
  label lbl$0
}

/lambdas.kt:(216,227): info: Generated Viper text for implicitArg:
method f$implicitArg$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  var ret$1: Ref
  var ret$2: Ref
  var anon$0: Ref
  anon$0 := df$intToRef(0)
  ret$2 := sp$timesInts(anon$0, df$intToRef(2))
  goto lbl$2
  label lbl$2
  ret$1 := ret$2
  goto lbl$1
  label lbl$1
  ret$0 := ret$1
  goto lbl$0
  label lbl$0
}

/lambdas.kt:(273,281): info: Generated Viper text for lambdaIf:
method f$lambdaIf$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  var ret$1: Ref
  var ret$2: Ref
  var anon$0: Ref
  anon$0 := df$intToRef(0)
  if (df$intFromRef(anon$0) == 0) {
    ret$2 := sp$plusInts(anon$0, df$intToRef(1))
  } else {
    ret$2 := sp$plusInts(anon$0, df$intToRef(2))}
  goto lbl$2
  label lbl$2
  ret$1 := ret$2
  goto lbl$1
  label lbl$1
  ret$0 := ret$1
  goto lbl$0
  label lbl$0
}

/lambdas.kt:(412,430): info: Generated Viper text for returnValueNotUsed:
method f$returnValueNotUsed$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var ret$1: Ref
  var ret$2: Ref
  var anon$0: Ref
  anon$0 := df$intToRef(0)
  ret$2 := anon$0
  goto lbl$2
  label lbl$2
  ret$1 := ret$2
  goto lbl$1
  label lbl$1
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/lambdas.kt:(466,475): info: Generated Viper text for shadowing:
method f$shadowing$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  var l0$x: Ref
  var l0$y: Ref
  var ret$1: Ref
  var ret$2: Ref
  var anon$0: Ref
  var l2$y: Ref
  l0$x := df$intToRef(1)
  l0$y := df$intToRef(1)
  anon$0 := df$intToRef(0)
  l2$y := df$intToRef(0)
  ret$2 := sp$plusInts(anon$0, l2$y)
  goto lbl$2
  label lbl$2
  ret$1 := ret$2
  goto lbl$1
  label lbl$1
  ret$0 := ret$1
  goto lbl$0
  label lbl$0
}

/lambdas.kt:(711,717): info: Generated Viper text for nested:
method f$nested$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  var l0$x: Ref
  var ret$1: Ref
  var l1$x: Ref
  var ret$2: Ref
  var ret$3: Ref
  var anon$0: Ref
  l0$x := df$intToRef(2)
  l1$x := df$intToRef(2)
  anon$0 := df$intToRef(0)
  ret$3 := sp$plusInts(anon$0, df$intToRef(1))
  goto lbl$3
  label lbl$3
  ret$2 := ret$3
  goto lbl$2
  label lbl$2
  ret$1 := ret$2
  goto lbl$1
  label lbl$1
  ret$0 := ret$1
  goto lbl$0
  label lbl$0
}

/lambdas.kt:(853,870): info: Generated Viper text for lambdaPassthrough:
method f$lambdaPassthrough$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var ret$1: Ref
  var ret$2: Ref
  var ret$3: Ref
  var anon$0: Ref
  anon$0 := df$intToRef(0)
  ret$3 := sp$plusInts(anon$0, df$intToRef(1))
  goto lbl$3
  label lbl$3
  ret$2 := ret$3
  goto lbl$2
  label lbl$2
  label lbl$1
  inhale df$isSubtype(df$typeOf(ret$1), df$unitType())
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

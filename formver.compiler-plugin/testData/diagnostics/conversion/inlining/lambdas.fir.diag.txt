/lambdas.kt:(155,166): info: Generated Viper text for explicitArg:
method f_explicitArg_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var ret_1: Ref
  var ret_2: Ref
  var anon_0: Ref
  anon_0 := df_intToRef(0)
  ret_2 := sp_plusInts(anon_0, anon_0)
  goto lbl_2
  label lbl_2
  ret_1 := ret_2
  goto lbl_1
  label lbl_1
  ret_0 := ret_1
  goto lbl_0
  label lbl_0
}

/lambdas.kt:(216,227): info: Generated Viper text for implicitArg:
method f_implicitArg_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var ret_1: Ref
  var ret_2: Ref
  var anon_0: Ref
  anon_0 := df_intToRef(0)
  ret_2 := sp_timesInts(anon_0, df_intToRef(2))
  goto lbl_2
  label lbl_2
  ret_1 := ret_2
  goto lbl_1
  label lbl_1
  ret_0 := ret_1
  goto lbl_0
  label lbl_0
}

/lambdas.kt:(273,281): info: Generated Viper text for lambdaIf:
method f_lambdaIf_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var ret_1: Ref
  var ret_2: Ref
  var anon_0: Ref
  anon_0 := df_intToRef(0)
  if (df_intFromRef(anon_0) == 0) {
    ret_2 := sp_plusInts(anon_0, df_intToRef(1))
  } else {
    ret_2 := sp_plusInts(anon_0, df_intToRef(2))}
  goto lbl_2
  label lbl_2
  ret_1 := ret_2
  goto lbl_1
  label lbl_1
  ret_0 := ret_1
  goto lbl_0
  label lbl_0
}

/lambdas.kt:(412,430): info: Generated Viper text for returnValueNotUsed:
method f_returnValueNotUsed_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var ret_1: Ref
  var ret_2: Ref
  var anon_0: Ref
  anon_0 := df_intToRef(0)
  ret_2 := anon_0
  goto lbl_2
  label lbl_2
  ret_1 := ret_2
  goto lbl_1
  label lbl_1
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/lambdas.kt:(466,475): info: Generated Viper text for shadowing:
method f_shadowing_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var l0_x: Ref
  var l0_y: Ref
  var ret_1: Ref
  var ret_2: Ref
  var anon_0: Ref
  var l2_y: Ref
  l0_x := df_intToRef(1)
  l0_y := df_intToRef(1)
  anon_0 := df_intToRef(0)
  l2_y := df_intToRef(0)
  ret_2 := sp_plusInts(anon_0, l2_y)
  goto lbl_2
  label lbl_2
  ret_1 := ret_2
  goto lbl_1
  label lbl_1
  ret_0 := ret_1
  goto lbl_0
  label lbl_0
}

/lambdas.kt:(711,717): info: Generated Viper text for nested:
method f_nested_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var l0_x: Ref
  var ret_1: Ref
  var l1_x: Ref
  var ret_2: Ref
  var ret_3: Ref
  var anon_0: Ref
  l0_x := df_intToRef(2)
  l1_x := df_intToRef(2)
  anon_0 := df_intToRef(0)
  ret_3 := sp_plusInts(anon_0, df_intToRef(1))
  goto lbl_3
  label lbl_3
  ret_2 := ret_3
  goto lbl_2
  label lbl_2
  ret_1 := ret_2
  goto lbl_1
  label lbl_1
  ret_0 := ret_1
  goto lbl_0
  label lbl_0
}

/lambdas.kt:(853,870): info: Generated Viper text for lambdaPassthrough:
method f_lambdaPassthrough_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var ret_1: Ref
  var ret_2: Ref
  var ret_3: Ref
  var anon_0: Ref
  anon_0 := df_intToRef(0)
  ret_3 := sp_plusInts(anon_0, df_intToRef(1))
  goto lbl_3
  label lbl_3
  ret_2 := ret_3
  goto lbl_2
  label lbl_2
  label lbl_1
  inhale df_isSubtype(df_typeOf(ret_1), df_unitType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

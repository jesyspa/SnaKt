/shadowing.kt:(23,34): info: Generated Viper text for shadowLocal:
method f_shadowLocal_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var l0_foo: Ref
  var l0_x: Ref
  l0_x := df_intToRef(0)
  if (df_intFromRef(l0_x) == 0) {
    var l2_x: Ref
    l0_foo := l0_x
    l2_x := df_intToRef(1)
    l0_foo := l2_x
  } else {
    var l3_x: Ref
    l0_foo := l0_x
    l3_x := df_intToRef(2)
    l0_foo := l3_x
  }
  l0_foo := l0_x
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/shadowing.kt:(232,243): info: Generated Viper text for shadowParam:
method f_shadowParam_TF_T_Int(p_x: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var l0_foo: Ref
  var l0_x: Ref
  inhale df_isSubtype(df_typeOf(p_x), df_intType())
  l0_foo := p_x
  l0_x := df_intToRef(0)
  l0_foo := l0_x
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/shadowing.kt:(322,334): info: Generated Viper text for shadowNested:
method f_shadowNested_TF_T_Int(p_x: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var l0_foo: Ref
  var l0_x: Ref
  inhale df_isSubtype(df_typeOf(p_x), df_intType())
  l0_foo := p_x
  l0_x := df_intToRef(0)
  l0_foo := l0_x
  if (true) {
    var l2_x: Ref
    var anon_0: Ref
    l0_foo := l0_x
    l2_x := df_intToRef(1)
    l0_foo := l2_x
    label lbl_continue_0
      invariant df_isSubtype(df_typeOf(l2_x), df_intType())
      invariant df_isSubtype(df_typeOf(l0_foo), df_intType())
      invariant df_isSubtype(df_typeOf(l0_x), df_intType())
      invariant df_isSubtype(df_typeOf(p_x), df_intType())
    anon_0 := df_boolToRef(true)
    if (df_boolFromRef(anon_0)) {
      var l3_x: Ref
      l0_foo := l2_x
      l3_x := df_intToRef(2)
      l0_foo := l3_x
      goto lbl_continue_0
    }
    label lbl_break_0
    assert df_isSubtype(df_typeOf(l2_x), df_intType())
    assert df_isSubtype(df_typeOf(l0_foo), df_intType())
    assert df_isSubtype(df_typeOf(l0_x), df_intType())
    assert df_isSubtype(df_typeOf(p_x), df_intType())
    l0_foo := l2_x
  }
  l0_foo := l0_x
  label lbl_ret_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

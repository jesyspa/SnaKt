/member_functions.kt:(51,60): info: Generated Viper text for memberFun:
field bf$x: Ref

method f$memberFun$TF$T$Foo(this$dispatch: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  inhale df$isSubtype(df$typeOf(this$dispatch), df$c$Foo())
  inhale acc(p$shared(this$dispatch), wildcard)
  unfold acc(p$shared(this$dispatch), wildcard)
  ret$0 := this$dispatch.bf$x
  goto lbl$0
  label lbl$0
}

/member_functions.kt:(102,115): info: Generated Viper text for callMemberFun:
field bf$x: Ref

method f$callMemberFun$TF$T$Foo(this$dispatch: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(this$dispatch), df$c$Foo())
  inhale acc(p$shared(this$dispatch), wildcard)
  anon$0 := f$memberFun$TF$T$Foo(this$dispatch)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

method f$memberFun$TF$T$Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$intType())


/member_functions.kt:(155,166): info: Generated Viper text for siblingCall:
field bf$x: Ref

method f$memberFun$TF$T$Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$intType())


method f$siblingCall$TF$T$Foo$T$Foo(this$dispatch: Ref, other: Ref)
  returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(this$dispatch), df$c$Foo())
  inhale acc(p$shared(this$dispatch), wildcard)
  inhale df$isSubtype(df$typeOf(other), df$c$Foo())
  inhale acc(p$shared(other), wildcard)
  anon$0 := f$memberFun$TF$T$Foo(other)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/member_functions.kt:(220,238): info: Generated Viper text for outerMemberFunCall:
field bf$x: Ref

method f$memberFun$TF$T$Foo(this$dispatch: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$intType())


method f$outerMemberFunCall$TF$T$Foo(f: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(f), df$c$Foo())
  inhale acc(p$shared(f), wildcard)
  anon$0 := f$memberFun$TF$T$Foo(f)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

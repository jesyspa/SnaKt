/subtyping.kt:(80,89): info: Generated Viper text for smartCast:
method f_smartCast_TF_NT_Int(x: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  inhale df_isSubtype(df_typeOf(x), df_nullable(df_intType()))
  if (x == df_nullValue()) {
    ret_0 := df_intToRef(0)
    goto lbl_0
  } else {
    ret_0 := x
    goto lbl_0
  }
  label lbl_0
}

/subtyping.kt:(187,202): info: Generated Viper text for returnSubtyping:
method f_returnSubtyping_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_nullable(df_intType()))
{
  ret_0 := df_intToRef(0)
  goto lbl_0
  label lbl_0
}

/subtyping.kt:(233,252): info: Generated Viper text for assignmentSubtyping:
method f_assignmentSubtyping_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var x: Ref
  x := df_boolToRef(false)
  x := df_boolToRef(true)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/subtyping.kt:(358,384): info: Generated Viper text for functionParameterSubtyping:
method f_functionParameterSubtyping_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  anon_0 := f_nullableParameter_TF_NT_Boolean(df_boolToRef(false))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_nullableParameter_TF_NT_Boolean(b: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())

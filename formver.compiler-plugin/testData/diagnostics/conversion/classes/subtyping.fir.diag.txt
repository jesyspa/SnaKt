/subtyping.kt:(80,89): info: Generated Viper text for smartCast:
method f$smartCast$TF$NT$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
{
  inhale df$isSubtype(df$typeOf(x), df$nullable(df$intType()))
  if (x == df$nullValue()) {
    ret$0 := df$intToRef(0)
    goto lbl$0
  } else {
    ret$0 := x
    goto lbl$0
  }
  label lbl$0
}

/subtyping.kt:(187,202): info: Generated Viper text for returnSubtyping:
method f$returnSubtyping$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$nullable(df$intType()))
{
  ret$0 := df$intToRef(0)
  goto lbl$0
  label lbl$0
}

/subtyping.kt:(233,252): info: Generated Viper text for assignmentSubtyping:
method f$assignmentSubtyping$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var x: Ref
  x := df$boolToRef(false)
  x := df$boolToRef(true)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/subtyping.kt:(358,384): info: Generated Viper text for functionParameterSubtyping:
method f$functionParameterSubtyping$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  anon$0 := f$nullableParameter$TF$NT$Boolean(df$boolToRef(false))
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

method f$nullableParameter$TF$NT$Boolean(b: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$unitType())

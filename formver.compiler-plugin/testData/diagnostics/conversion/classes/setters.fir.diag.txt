/setters.kt:(103,127): info: Generated Viper text for testPrimitiveFieldSetter:
field bf$a: Ref

method f$testPrimitiveFieldSetter$TF$T$PrimitiveField(pf: Ref)
  returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  inhale df$isSubtype(df$typeOf(pf), df$c$PrimitiveField())
  inhale acc(p$shared(pf), wildcard)
  inhale acc(pf.bf$a, write)
  pf.bf$a := df$intToRef(0)
  exhale acc(pf.bf$a, write)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/setters.kt:(170,194): info: Generated Viper text for testReferenceFieldSetter:
field bf$a: Ref

field bf$pf: Ref

method con$T$Int(a: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$c$PrimitiveField())
  ensures acc(p$c$PrimitiveField$shared(ret), wildcard)
  ensures acc(p$c$PrimitiveField$unique(ret), write)


method f$testReferenceFieldSetter$TF$T$ReferenceField(rf: Ref)
  returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(rf), df$c$ReferenceField())
  inhale acc(p$c$ReferenceField$shared(rf), wildcard)
  anon$0 := con$T$Int(df$intToRef(0))
  inhale acc(rf.bf$pf, write)
  rf.bf$pf := anon$0
  exhale acc(rf.bf$pf, write)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/setters.kt:(427,454): info: Generated Viper text for testPrimitivePropertySetter:
method f$testPrimitivePropertySetter$TF$T$PrimitiveProperty(pp: Ref)
  returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(pp), df$c$PrimitiveProperty())
  inhale acc(p$shared(pp), wildcard)
  anon$0 := ps$aProp(pp, df$intToRef(0))
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

method pg$aProp(this$dispatch: Ref) returns (ret: Ref)


method ps$aProp(this$dispatch: Ref, anon$0: Ref) returns (ret: Ref)


/setters.kt:(504,531): info: Generated Viper text for testReferencePropertySetter:
method con$() returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$c$PrimitiveProperty())
  ensures acc(p$c$PrimitiveProperty$shared(ret), wildcard)
  ensures acc(p$c$PrimitiveProperty$unique(ret), write)


method f$testReferencePropertySetter$TF$T$ReferenceProperty(rp: Ref)
  returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  var anon$1: Ref
  inhale df$isSubtype(df$typeOf(rp), df$c$ReferenceProperty())
  inhale acc(p$c$ReferenceProperty$shared(rp), wildcard)
  anon$1 := con$()
  anon$0 := ps$ppProp(rp, anon$1)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

method pg$aProp(this$dispatch: Ref) returns (ret: Ref)


method pg$ppProp(this$dispatch: Ref) returns (ret: Ref)


method ps$aProp(this$dispatch: Ref, anon$0: Ref) returns (ret: Ref)


method ps$ppProp(this$dispatch: Ref, anon$0: Ref) returns (ret: Ref)

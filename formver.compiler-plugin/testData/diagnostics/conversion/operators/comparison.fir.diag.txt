/comparison.kt:(23,27): info: Generated Viper text for less:
method f$less$TF$T$Int$T$Int(x: Ref, y: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
{
  inhale df$isSubtype(df$typeOf(x), df$intType())
  inhale df$isSubtype(df$typeOf(y), df$intType())
  ret$0 := sp$ltInts(x, y)
  goto lbl$0
  label lbl$0
}

/comparison.kt:(79,88): info: Generated Viper text for lessEqual:
method f$lessEqual$TF$T$Int$T$Int(x: Ref, y: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
{
  inhale df$isSubtype(df$typeOf(x), df$intType())
  inhale df$isSubtype(df$typeOf(y), df$intType())
  ret$0 := sp$leInts(x, y)
  goto lbl$0
  label lbl$0
}

/comparison.kt:(141,148): info: Generated Viper text for greater:
method f$greater$TF$T$Int$T$Int(x: Ref, y: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
{
  inhale df$isSubtype(df$typeOf(x), df$intType())
  inhale df$isSubtype(df$typeOf(y), df$intType())
  ret$0 := sp$gtInts(x, y)
  goto lbl$0
  label lbl$0
}

/comparison.kt:(200,212): info: Generated Viper text for greaterEqual:
method f$greaterEqual$TF$T$Int$T$Int(x: Ref, y: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
{
  inhale df$isSubtype(df$typeOf(x), df$intType())
  inhale df$isSubtype(df$typeOf(y), df$intType())
  ret$0 := sp$geInts(x, y)
  goto lbl$0
  label lbl$0
}

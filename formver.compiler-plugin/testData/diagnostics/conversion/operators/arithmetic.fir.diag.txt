/arithmetic.kt:(23,31): info: Generated Viper text for addition:
method f$addition$TF$T$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var y: Ref
  inhale df$isSubtype(df$typeOf(x), df$intType())
  y := sp$plusInts(x, x)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/arithmetic.kt:(66,77): info: Generated Viper text for subtraction:
method f$subtraction$TF$T$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var y: Ref
  inhale df$isSubtype(df$typeOf(x), df$intType())
  y := sp$minusInts(x, x)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/arithmetic.kt:(112,126): info: Generated Viper text for multiplication:
method f$multiplication$TF$T$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var y: Ref
  inhale df$isSubtype(df$typeOf(x), df$intType())
  y := sp$timesInts(x, x)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/arithmetic.kt:(161,169): info: Generated Viper text for division:
method f$division$TF$T$Int(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var y: Ref
  inhale df$isSubtype(df$typeOf(x), df$intType())
  y := sp$divInts(x, x)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

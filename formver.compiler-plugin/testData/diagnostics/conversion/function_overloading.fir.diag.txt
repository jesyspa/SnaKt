/function_overloading.kt:(49,52): info: Generated Viper text for baz:
method f_baz_TF_T_Bar_T_Foo(this$dispatch: Ref, f: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(this$dispatch), df_c_Bar())
  inhale acc(p_c_Bar_shared(this$dispatch), wildcard)
  inhale df_isSubtype(df_typeOf(f), df_c_Foo())
  inhale acc(p_c_Foo_shared(f), wildcard)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(74,77): info: Generated Viper text for baz:
method f_baz_TF_T_Bar_T_Bar(this$dispatch: Ref, b: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(this$dispatch), df_c_Bar())
  inhale acc(p_shared(this$dispatch), wildcard)
  inhale df_isSubtype(df_typeOf(b), df_c_Bar())
  inhale acc(p_shared(b), wildcard)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(98,107): info: Generated Viper text for fakePrint:
method f_fakePrint_TF_T_Bar(b: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(b), df_c_Bar())
  inhale acc(p_shared(b), wildcard)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(125,134): info: Generated Viper text for fakePrint:
method f_fakePrint_TF_T_Foo(f: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(f), df_c_Foo())
  inhale acc(p_shared(f), wildcard)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(152,161): info: Generated Viper text for fakePrint:
method f_fakePrint_TF_T_Int(value: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(value), df_intType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(183,192): info: Generated Viper text for fakePrint:
method f_fakePrint_TF_T_Boolean(truth: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(truth), df_boolType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(219,238): info: Generated Viper text for differInNullability:
method f_differInNullability_TF_T_Int(i: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(i), df_intType())
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(256,275): info: Generated Viper text for differInNullability:
method f_differInNullability_TF_NT_Int(i: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  inhale df_isSubtype(df_typeOf(i), df_nullable(df_intType()))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(295,321): info: Generated Viper text for testGlobalScopeOverloading:
method con_c_Bar_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Bar())
  ensures acc(p_c_Bar_shared(ret), wildcard)
  ensures acc(p_c_Bar_unique(ret), write)


method con_c_Foo_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Foo())
  ensures acc(p_c_Foo_shared(ret), wildcard)
  ensures acc(p_c_Foo_unique(ret), write)


method f_fakePrint_TF_T_Bar(b: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_fakePrint_TF_T_Boolean(truth: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_fakePrint_TF_T_Foo(f: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_fakePrint_TF_T_Int(value: Ref) returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_testGlobalScopeOverloading_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  var anon_1: Ref
  var anon_2: Ref
  var anon_3: Ref
  var anon_4: Ref
  var anon_5: Ref
  anon_0 := f_fakePrint_TF_T_Int(df_intToRef(42))
  anon_1 := f_fakePrint_TF_T_Boolean(df_boolToRef(true))
  anon_3 := con_c_Foo_()
  anon_2 := f_fakePrint_TF_T_Foo(anon_3)
  anon_5 := con_c_Bar_()
  anon_4 := f_fakePrint_TF_T_Bar(anon_5)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

/function_overloading.kt:(413,441): info: Generated Viper text for testClassFunctionOverloading:
method con_c_Bar_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Bar())
  ensures acc(p_c_Bar_shared(ret), wildcard)
  ensures acc(p_c_Bar_unique(ret), write)


method con_c_Foo_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_Foo())
  ensures acc(p_c_Foo_shared(ret), wildcard)
  ensures acc(p_c_Foo_unique(ret), write)


method f_baz_TF_T_Bar_T_Bar(this$dispatch: Ref, p_b: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_baz_TF_T_Bar_T_Foo(this$dispatch: Ref, p_f: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_unitType())


method f_testClassFunctionOverloading_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var l0_b: Ref
  var anon_0: Ref
  var anon_1: Ref
  var anon_2: Ref
  var anon_3: Ref
  l0_b := con_c_Bar_()
  anon_1 := con_c_Foo_()
  anon_0 := f_baz_TF_T_Bar_T_Foo(l0_b, anon_1)
  anon_3 := con_c_Bar_()
  anon_2 := f_baz_TF_T_Bar_T_Bar(l0_b, anon_3)
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

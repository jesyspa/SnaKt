/loop.kt:(23,32): info: Generated Viper text for whileLoop:
method f$whileLoop$TF$T$Boolean(b: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(b), df$boolType())
  label lbl$continue$0
    invariant df$isSubtype(df$typeOf(b), df$boolType())
  anon$0 := b
  if (df$boolFromRef(anon$0)) {
    var a: Ref
    var c: Ref
    a := df$intToRef(1)
    c := df$intToRef(2)
    goto lbl$continue$0
  }
  label lbl$break$0
  assert df$isSubtype(df$typeOf(b), df$boolType())
  ret$0 := df$boolToRef(false)
  goto lbl$ret$0
  label lbl$ret$0
}

/loop.kt:(138,160): info: Generated Viper text for whileFunctionCondition:
method f$whileFunctionCondition$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var anon$0: Ref
  label lbl$continue$0
  anon$0 := f$whileLoop$TF$T$Boolean(df$boolToRef(true))
  if (df$boolFromRef(anon$0)) {
    goto lbl$continue$0
  }
  label lbl$break$0
  label lbl$ret$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

method f$whileLoop$TF$T$Boolean(b: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$boolType())

/chars.kt:(212,221): info: Generated Viper text for testChars:
field bf$char: Ref

field bf$size: Ref

method con$T$Char(char: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$c$CharBox())
  ensures acc(p$c$CharBox$shared(ret), wildcard)
  ensures acc(p$c$CharBox$unique(ret), write)
  ensures df$charFromRef((unfolding acc(p$c$CharBox$shared(ret), wildcard) in
      ret.bf$char)) ==
    df$charFromRef(char)


method f$testChars$TF$T$Char(c: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var box: Ref
  var charA: Ref
  var cond1: Ref
  var anon$0: Ref
  var charZ: Ref
  inhale df$isSubtype(df$typeOf(c), df$charType())
  box := con$T$Char(df$charToRef(97))
  charA := df$charToRef(97)
  unfold acc(p$c$CharBox$shared(box), wildcard)
  anon$0 := box.bf$char
  cond1 := df$boolToRef(df$charFromRef(charA) == df$charFromRef(anon$0))
  assert df$boolFromRef(cond1)
  charZ := df$charToRef(122)
  assert df$charFromRef(charA) == df$charFromRef(charZ) - 25
  assert df$charFromRef(charA) - df$charFromRef(charZ) == -25
  assert df$charFromRef(charZ) == df$charFromRef(charA) + 25
  assert df$charFromRef(charA) <= df$charFromRef(charZ)
  assert df$charFromRef(charA) < df$charFromRef(charZ)
  assert df$charFromRef(charZ) > df$charFromRef(charA)
  assert df$charFromRef(charZ) >= df$charFromRef(charZ)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

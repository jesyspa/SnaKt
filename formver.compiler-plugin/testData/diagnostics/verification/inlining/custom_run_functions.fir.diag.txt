/custom_run_functions.kt:(1194,1200): info: Generated Viper text for useRun:
field bf$size: Ref

method f$useRun$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var l0$genericResult: Ref
  var anon$10: Ref
  var anon$11: Ref
  var ret$1: Ref
  var anon$12: Ref
  var ret$2: Ref
  var anon$13: Ref
  var anon$14: Ref
  var ret$3: Ref
  var anon$15: Ref
  var ret$4: Ref
  var anon$16: Ref
  var anon$17: Ref
  var ret$5: Ref
  var anon$18: Ref
  var ret$6: Ref
  var l0$capturedResult: Ref
  var anon$19: Ref
  var anon$20: Ref
  var ret$7: Ref
  var anon$21: Ref
  var ret$8: Ref
  var anon$22: Ref
  var anon$23: Ref
  var ret$9: Ref
  var anon$24: Ref
  var ret$10: Ref
  var anon$25: Ref
  var anon$26: Ref
  var ret$11: Ref
  var anon$27: Ref
  var ret$12: Ref
  var l0$intResult: Ref
  var anon$28: Ref
  var ret$13: Ref
  var ret$14: Ref
  var anon$29: Ref
  var ret$15: Ref
  var ret$16: Ref
  var anon$30: Ref
  var ret$17: Ref
  var ret$18: Ref
  var l0$stdlibResult: Ref
  var anon$31: Ref
  var anon$32: Ref
  var ret$19: Ref
  var anon$33: Ref
  var ret$20: Ref
  var anon$34: Ref
  var anon$35: Ref
  var ret$21: Ref
  var anon$36: Ref
  var ret$22: Ref
  var anon$37: Ref
  var anon$38: Ref
  var ret$23: Ref
  var anon$39: Ref
  var ret$24: Ref
  var l0$doubleIntRunResult: Ref
  var anon$40: Ref
  var ret$25: Ref
  var anon$0: Ref
  var ret$27: Ref
  var anon$1: Ref
  var ret$26: Ref
  var l0$genericReceiverResult: Ref
  var anon$41: Ref
  var anon$42: Ref
  var ret$28: Ref
  var anon$2: Ref
  var anon$43: Ref
  var ret$29: Ref
  var anon$3: Ref
  var l0$cond1: Ref
  var ret$30: Ref
  var l30$result: Ref
  var ret$31: Ref
  var l0$cond2: Ref
  var anon$44: Ref
  var ret$32: Ref
  var l32$result: Ref
  var ret$33: Ref
  var l0$cond3: Ref
  var ret$34: Ref
  var l34$result: Ref
  var ret$35: Ref
  var anon$4: Ref
  var l0$cond4: Ref
  var anon$45: Ref
  var ret$36: Ref
  var l36$result: Ref
  var ret$37: Ref
  var anon$5: Ref
  var l0$cond5: Ref
  var ret$38: Ref
  var l38$result: Ref
  var ret$39: Ref
  var anon$6: Ref
  var l0$cond6: Ref
  var ret$40: Ref
  var l40$result: Ref
  var ret$41: Ref
  var anon$7: Ref
  var l0$cond7: Ref
  var ret$42: Ref
  var l42$result: Ref
  var ret$44: Ref
  var anon$9: Ref
  var ret$43: Ref
  var anon$8: Ref
  ret$2 := df$intToRef(1)
  goto lbl$2
  label lbl$2
  anon$12 := ret$2
  ret$1 := anon$12
  inhale df$isSubtype(df$typeOf(ret$1), df$nullable(df$anyType()))
  goto lbl$1
  label lbl$1
  anon$11 := ret$1
  anon$10 := anon$11
  inhale df$isSubtype(df$typeOf(anon$10), df$intType())
  ret$4 := df$intToRef(2)
  goto lbl$4
  label lbl$4
  anon$15 := ret$4
  ret$3 := anon$15
  inhale df$isSubtype(df$typeOf(ret$3), df$nullable(df$anyType()))
  goto lbl$3
  label lbl$3
  anon$14 := ret$3
  anon$13 := anon$14
  inhale df$isSubtype(df$typeOf(anon$13), df$intType())
  ret$6 := df$intToRef(3)
  goto lbl$6
  label lbl$6
  anon$18 := ret$6
  ret$5 := anon$18
  inhale df$isSubtype(df$typeOf(ret$5), df$nullable(df$anyType()))
  goto lbl$5
  label lbl$5
  anon$17 := ret$5
  anon$16 := anon$17
  inhale df$isSubtype(df$typeOf(anon$16), df$intType())
  l0$genericResult := df$boolToRef(df$intFromRef(anon$10) +
    df$intFromRef(anon$13) ==
    df$intFromRef(anon$16))
  ret$8 := df$intToRef(1)
  goto lbl$8
  label lbl$8
  anon$21 := ret$8
  ret$7 := anon$21
  inhale df$isSubtype(df$typeOf(ret$7), df$nullable(df$anyType()))
  goto lbl$7
  label lbl$7
  anon$20 := ret$7
  anon$19 := anon$20
  inhale df$isSubtype(df$typeOf(anon$19), df$intType())
  ret$10 := df$intToRef(2)
  goto lbl$10
  label lbl$10
  anon$24 := ret$10
  ret$9 := anon$24
  inhale df$isSubtype(df$typeOf(ret$9), df$nullable(df$anyType()))
  goto lbl$9
  label lbl$9
  anon$23 := ret$9
  anon$22 := anon$23
  inhale df$isSubtype(df$typeOf(anon$22), df$intType())
  ret$12 := df$intToRef(3)
  goto lbl$12
  label lbl$12
  anon$27 := ret$12
  ret$11 := anon$27
  inhale df$isSubtype(df$typeOf(ret$11), df$nullable(df$anyType()))
  goto lbl$11
  label lbl$11
  anon$26 := ret$11
  anon$25 := anon$26
  inhale df$isSubtype(df$typeOf(anon$25), df$intType())
  l0$capturedResult := df$boolToRef(df$intFromRef(anon$19) +
    df$intFromRef(anon$22) ==
    df$intFromRef(anon$25))
  ret$14 := df$intToRef(1)
  goto lbl$14
  label lbl$14
  ret$13 := ret$14
  goto lbl$13
  label lbl$13
  anon$28 := ret$13
  ret$16 := df$intToRef(2)
  goto lbl$16
  label lbl$16
  ret$15 := ret$16
  goto lbl$15
  label lbl$15
  anon$29 := ret$15
  ret$18 := df$intToRef(3)
  goto lbl$18
  label lbl$18
  ret$17 := ret$18
  goto lbl$17
  label lbl$17
  anon$30 := ret$17
  l0$intResult := df$boolToRef(df$intFromRef(anon$28) +
    df$intFromRef(anon$29) ==
    df$intFromRef(anon$30))
  ret$20 := df$intToRef(1)
  goto lbl$20
  label lbl$20
  anon$33 := ret$20
  ret$19 := anon$33
  inhale df$isSubtype(df$typeOf(ret$19), df$nullable(df$anyType()))
  goto lbl$19
  label lbl$19
  anon$32 := ret$19
  anon$31 := anon$32
  inhale df$isSubtype(df$typeOf(anon$31), df$intType())
  ret$22 := df$intToRef(2)
  goto lbl$22
  label lbl$22
  anon$36 := ret$22
  ret$21 := anon$36
  inhale df$isSubtype(df$typeOf(ret$21), df$nullable(df$anyType()))
  goto lbl$21
  label lbl$21
  anon$35 := ret$21
  anon$34 := anon$35
  inhale df$isSubtype(df$typeOf(anon$34), df$intType())
  ret$24 := df$intToRef(3)
  goto lbl$24
  label lbl$24
  anon$39 := ret$24
  ret$23 := anon$39
  inhale df$isSubtype(df$typeOf(ret$23), df$nullable(df$anyType()))
  goto lbl$23
  label lbl$23
  anon$38 := ret$23
  anon$37 := anon$38
  inhale df$isSubtype(df$typeOf(anon$37), df$intType())
  l0$stdlibResult := df$boolToRef(df$intFromRef(anon$31) +
    df$intFromRef(anon$34) ==
    df$intFromRef(anon$37))
  anon$0 := df$intToRef(1)
  ret$26 := sp$plusInts(anon$0, df$intToRef(1))
  goto lbl$26
  label lbl$26
  anon$1 := ret$26
  ret$27 := sp$plusInts(anon$1, df$intToRef(1))
  goto lbl$27
  label lbl$27
  ret$25 := ret$27
  goto lbl$25
  label lbl$25
  anon$40 := ret$25
  l0$doubleIntRunResult := df$boolToRef(df$intFromRef(anon$40) == 3)
  anon$2 := df$intToRef(1)
  inhale df$isSubtype(df$typeOf(anon$2), df$nullable(df$anyType()))
  inhale df$isSubtype(df$typeOf(anon$2), df$intType())
  anon$3 := anon$2
  ret$29 := sp$plusInts(anon$3, df$intToRef(2))
  goto lbl$29
  label lbl$29
  anon$43 := ret$29
  ret$28 := anon$43
  inhale df$isSubtype(df$typeOf(ret$28), df$nullable(df$anyType()))
  goto lbl$28
  label lbl$28
  anon$42 := ret$28
  anon$41 := anon$42
  inhale df$isSubtype(df$typeOf(anon$41), df$intType())
  l0$genericReceiverResult := df$boolToRef(df$intFromRef(anon$41) == 3)
  ret$31 := sp$plusInts(df$intToRef(1), df$intToRef(2))
  goto lbl$31
  label lbl$31
  l30$result := ret$31
  ret$30 := df$boolToRef(df$intFromRef(l30$result) == 3)
  goto lbl$30
  label lbl$30
  l0$cond1 := ret$30
  ret$33 := df$intToRef(4)
  goto lbl$33
  label lbl$33
  l32$result := ret$33
  ret$32 := df$boolToRef(df$intFromRef(l32$result) == 3)
  goto lbl$32
  label lbl$32
  anon$44 := ret$32
  l0$cond2 := sp$notBool(anon$44)
  anon$4 := df$intToRef(1)
  ret$35 := sp$plusInts(anon$4, df$intToRef(2))
  goto lbl$35
  label lbl$35
  l34$result := ret$35
  ret$34 := df$boolToRef(df$intFromRef(l34$result) == 3)
  goto lbl$34
  label lbl$34
  l0$cond3 := ret$34
  anon$5 := df$intToRef(1)
  ret$37 := anon$5
  goto lbl$37
  label lbl$37
  l36$result := ret$37
  ret$36 := df$boolToRef(df$intFromRef(l36$result) == 3)
  goto lbl$36
  label lbl$36
  anon$45 := ret$36
  l0$cond4 := sp$notBool(anon$45)
  anon$6 := df$intToRef(1)
  ret$39 := sp$plusInts(anon$6, df$intToRef(2))
  goto lbl$39
  label lbl$39
  l38$result := ret$39
  ret$38 := df$boolToRef(df$intFromRef(l38$result) == 3)
  goto lbl$38
  label lbl$38
  l0$cond5 := ret$38
  anon$7 := df$intToRef(1)
  ret$41 := sp$plusInts(anon$7, df$intToRef(2))
  goto lbl$41
  label lbl$41
  l40$result := ret$41
  ret$40 := df$boolToRef(df$intFromRef(l40$result) == 3)
  goto lbl$40
  label lbl$40
  l0$cond6 := ret$40
  anon$8 := df$intToRef(1)
  ret$43 := sp$plusInts(anon$8, df$intToRef(1))
  goto lbl$43
  label lbl$43
  anon$9 := ret$43
  ret$44 := sp$plusInts(anon$9, df$intToRef(1))
  goto lbl$44
  label lbl$44
  l42$result := ret$44
  ret$42 := df$boolToRef(df$intFromRef(l42$result) == 3)
  goto lbl$42
  label lbl$42
  l0$cond7 := ret$42
  assert df$boolFromRef(l0$intResult)
  assert df$boolFromRef(l0$genericResult)
  assert df$boolFromRef(l0$stdlibResult)
  assert df$boolFromRef(l0$capturedResult)
  assert df$boolFromRef(l0$cond1)
  assert df$boolFromRef(l0$cond2)
  assert df$boolFromRef(l0$cond3)
  assert df$boolFromRef(l0$cond4)
  assert df$boolFromRef(l0$cond5)
  assert df$boolFromRef(l0$cond6)
  assert df$boolFromRef(l0$cond7)
  assert df$boolFromRef(l0$doubleIntRunResult)
  assert df$boolFromRef(l0$genericReceiverResult)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/custom_run_functions.kt:(2354,2369): info: Generated Viper text for complexScenario:
method f$complexScenario$TF$T$Boolean(p$arg: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
  ensures df$boolFromRef(ret$0) == true ==> df$boolFromRef(p$arg)
  ensures df$boolFromRef(ret$0) == false ==> !df$boolFromRef(p$arg)
{
  var anon$11: Ref
  var anon$12: Ref
  var ret$1: Ref
  inhale df$isSubtype(df$typeOf(p$arg), df$boolType())
  if (df$boolFromRef(p$arg)) {
    var anon$13: Ref
    var ret$2: Ref
    var anon$14: Ref
    var ret$3: Ref
    var l5$result: Ref
    var ret$4: Ref
    var anon$0: Ref
    var anon$15: Ref
    var ret$5: Ref
    var anon$1: Ref
    var anon$16: Ref
    var ret$6: Ref
    var anon$2: Ref
    var ret$7: Ref
    var ret$9: Ref
    var anon$3: Ref
    var ret$8: Ref
    anon$0 := df$intToRef(1)
    inhale df$isSubtype(df$typeOf(anon$0), df$nullable(df$anyType()))
    anon$1 := anon$0
    inhale df$isSubtype(df$typeOf(anon$1), df$intType())
    anon$2 := anon$1
    ret$8 := sp$plusInts(anon$2, df$intToRef(1))
    goto lbl$8
    label lbl$8
    anon$3 := ret$8
    ret$9 := sp$plusInts(anon$3, df$intToRef(1))
    goto lbl$9
    label lbl$9
    ret$7 := ret$9
    goto lbl$7
    label lbl$7
    ret$6 := ret$7
    goto lbl$6
    label lbl$6
    anon$16 := ret$6
    ret$5 := anon$16
    inhale df$isSubtype(df$typeOf(ret$5), df$nullable(df$anyType()))
    goto lbl$5
    label lbl$5
    anon$15 := ret$5
    ret$4 := anon$15
    inhale df$isSubtype(df$typeOf(ret$4), df$intType())
    goto lbl$4
    label lbl$4
    l5$result := ret$4
    ret$3 := df$boolToRef(df$intFromRef(l5$result) == 3)
    goto lbl$3
    label lbl$3
    anon$14 := ret$3
    ret$2 := anon$14
    goto lbl$2
    label lbl$2
    anon$13 := ret$2
    ret$1 := anon$13
    inhale df$isSubtype(df$typeOf(ret$1), df$nullable(df$anyType()))
  } else {
    var anon$17: Ref
    anon$17 := df$nullValue()
    ret$1 := anon$17
  }
  goto lbl$1
  label lbl$1
  anon$12 := ret$1
  anon$11 := anon$12
  inhale df$isSubtype(df$typeOf(anon$11), df$nullable(df$boolType()))
  if (anon$11 != df$nullValue()) {
    ret$0 := anon$11
  } else {
    var anon$18: Ref
    var ret$10: Ref
    var anon$19: Ref
    var ret$11: Ref
    var ret$12: Ref
    var l15$result: Ref
    var ret$13: Ref
    var anon$4: Ref
    var anon$20: Ref
    var ret$14: Ref
    var anon$5: Ref
    var anon$21: Ref
    var ret$15: Ref
    var anon$6: Ref
    var anon$22: Ref
    var ret$16: Ref
    var anon$7: Ref
    var anon$23: Ref
    var ret$17: Ref
    var anon$8: Ref
    var anon$24: Ref
    var ret$18: Ref
    var anon$9: Ref
    var anon$25: Ref
    var ret$19: Ref
    var anon$10: Ref
    anon$4 := df$intToRef(1)
    inhale df$isSubtype(df$typeOf(anon$4), df$nullable(df$anyType()))
    anon$5 := anon$4
    inhale df$isSubtype(df$typeOf(anon$5), df$intType())
    anon$6 := anon$5
    anon$7 := sp$plusInts(anon$6, df$intToRef(1))
    inhale df$isSubtype(df$typeOf(anon$7), df$nullable(df$anyType()))
    inhale df$isSubtype(df$typeOf(anon$7), df$intType())
    anon$8 := anon$7
    anon$9 := sp$plusInts(anon$8, df$intToRef(1))
    inhale df$isSubtype(df$typeOf(anon$9), df$nullable(df$anyType()))
    inhale df$isSubtype(df$typeOf(anon$9), df$intType())
    anon$10 := anon$9
    ret$19 := sp$plusInts(anon$10, df$intToRef(1))
    goto lbl$19
    label lbl$19
    anon$25 := ret$19
    ret$18 := anon$25
    inhale df$isSubtype(df$typeOf(ret$18), df$nullable(df$anyType()))
    goto lbl$18
    label lbl$18
    anon$24 := ret$18
    ret$17 := anon$24
    inhale df$isSubtype(df$typeOf(ret$17), df$intType())
    goto lbl$17
    label lbl$17
    anon$23 := ret$17
    ret$16 := anon$23
    inhale df$isSubtype(df$typeOf(ret$16), df$nullable(df$anyType()))
    goto lbl$16
    label lbl$16
    anon$22 := ret$16
    ret$15 := anon$22
    inhale df$isSubtype(df$typeOf(ret$15), df$intType())
    goto lbl$15
    label lbl$15
    anon$21 := ret$15
    ret$14 := anon$21
    inhale df$isSubtype(df$typeOf(ret$14), df$nullable(df$anyType()))
    goto lbl$14
    label lbl$14
    anon$20 := ret$14
    ret$13 := anon$20
    inhale df$isSubtype(df$typeOf(ret$13), df$intType())
    goto lbl$13
    label lbl$13
    l15$result := ret$13
    ret$12 := df$boolToRef(df$intFromRef(l15$result) == 3)
    goto lbl$12
    label lbl$12
    ret$11 := ret$12
    goto lbl$11
    label lbl$11
    anon$19 := ret$11
    ret$10 := anon$19
    inhale df$isSubtype(df$typeOf(ret$10), df$nullable(df$anyType()))
    goto lbl$10
    label lbl$10
    anon$18 := ret$10
    ret$0 := anon$18
    inhale df$isSubtype(df$typeOf(ret$0), df$boolType())
  }
  goto lbl$0
  label lbl$0
}

/custom_run_functions.kt:(3410,3425): info: Generated Viper text for testCustomClass:
field bf$member: Ref

field bf$size: Ref

method con$() returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$c$CustomClass())
  ensures acc(p$c$CustomClass$shared(ret), wildcard)
  ensures acc(p$c$CustomClass$unique(ret), write)


method f$testCustomClass$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var custom: Ref
  var cond1: Ref
  var anon$0: Ref
  var anon$1: Ref
  var ret$1: Ref
  var anon$2: Ref
  var ret$2: Ref
  var anon$3: Ref
  var anon$4: Ref
  var ret$3: Ref
  var anon$5: Ref
  var ret$4: Ref
  custom := con$()
  unfold acc(p$c$CustomClass$shared(custom), wildcard)
  ret$2 := custom.bf$member
  goto lbl$2
  label lbl$2
  anon$2 := ret$2
  ret$1 := anon$2
  inhale df$isSubtype(df$typeOf(ret$1), df$nullable(df$anyType()))
  goto lbl$1
  label lbl$1
  anon$1 := ret$1
  anon$0 := anon$1
  inhale df$isSubtype(df$typeOf(anon$0), df$intType())
  unfold acc(p$c$CustomClass$shared(custom), wildcard)
  ret$4 := custom.bf$member
  goto lbl$4
  label lbl$4
  anon$5 := ret$4
  ret$3 := anon$5
  inhale df$isSubtype(df$typeOf(ret$3), df$nullable(df$anyType()))
  goto lbl$3
  label lbl$3
  anon$4 := ret$3
  anon$3 := anon$4
  inhale df$isSubtype(df$typeOf(anon$3), df$intType())
  cond1 := df$boolToRef(df$intFromRef(anon$0) == df$intFromRef(anon$3))
  assert df$boolFromRef(cond1)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

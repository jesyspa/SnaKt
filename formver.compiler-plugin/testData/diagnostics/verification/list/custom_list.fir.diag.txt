/custom_list.kt:(168,171): info: Generated Viper text for get:
field bf$value: Ref

field sp$size: Ref

method f$get$TF$T$CustomList$T$Int(this$dispatch: Ref, index: Ref)
  returns (ret$0: Ref)
  requires acc(this$dispatch.sp$size, write)
  requires df$intFromRef(this$dispatch.sp$size) >= 0
  requires df$intFromRef(index) >= 0
  requires df$intFromRef(this$dispatch.sp$size) > df$intFromRef(index)
  ensures acc(this$dispatch.sp$size, write)
  ensures df$intFromRef(this$dispatch.sp$size) >= 0
  ensures df$isSubtype(df$typeOf(ret$0), df$intType())
  ensures df$intFromRef(this$dispatch.sp$size) ==
    old(df$intFromRef(this$dispatch.sp$size))
{
  inhale df$isSubtype(df$typeOf(this$dispatch), df$c$CustomList())
  inhale acc(p$c$CustomList$shared(this$dispatch), wildcard)
  inhale df$isSubtype(df$typeOf(index), df$intType())
  unfold acc(p$c$CustomList$shared(this$dispatch), wildcard)
  ret$0 := this$dispatch.bf$value
  goto lbl$0
  label lbl$0
}

/custom_list.kt:(248,252): info: Generated Viper text for test:
field bf$value: Ref

field sp$size: Ref

method con$T$Int$T$Int(size: Ref, value: Ref) returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$c$CustomList())
  ensures acc(ret.sp$size, write)
  ensures df$intFromRef(ret.sp$size) >= 0
  ensures acc(p$c$CustomList$shared(ret), wildcard)
  ensures acc(p$c$CustomList$unique(ret), write)


method f$get$TF$T$CustomList$T$Int(this$dispatch: Ref, index: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp$size, write)
  requires df$intFromRef(this$dispatch.sp$size) >= 0
  requires df$intFromRef(index) >= 0
  requires df$intFromRef(this$dispatch.sp$size) > df$intFromRef(index)
  ensures acc(this$dispatch.sp$size, write)
  ensures df$intFromRef(this$dispatch.sp$size) >= 0
  ensures df$isSubtype(df$typeOf(ret), df$intType())
  ensures df$intFromRef(this$dispatch.sp$size) ==
    old(df$intFromRef(this$dispatch.sp$size))


method f$isEmpty$TF$T$CustomList(this$dispatch: Ref) returns (ret: Ref)
  requires acc(this$dispatch.sp$size, write)
  requires df$intFromRef(this$dispatch.sp$size) >= 0
  ensures acc(this$dispatch.sp$size, write)
  ensures df$intFromRef(this$dispatch.sp$size) >= 0
  ensures df$isSubtype(df$typeOf(ret), df$boolType())
  ensures df$intFromRef(this$dispatch.sp$size) ==
    old(df$intFromRef(this$dispatch.sp$size))
  ensures df$boolFromRef(ret) ==> df$intFromRef(this$dispatch.sp$size) == 0
  ensures !df$boolFromRef(ret) ==> df$intFromRef(this$dispatch.sp$size) > 0


method f$test$TF$T$Int(n: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
{
  var customList: Ref
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(n), df$intType())
  customList := con$T$Int$T$Int(n, df$intToRef(0))
  anon$0 := f$isEmpty$TF$T$CustomList(customList)
  if (!df$boolFromRef(anon$0)) {
    var anon$1: Ref
    var anon$2: Ref
    var anon$3: Ref
    anon$2 := customList.sp$size
    inhale df$isSubtype(df$typeOf(anon$2), df$intType())
    anon$1 := f$get$TF$T$CustomList$T$Int(customList, sp$minusInts(anon$2, df$intToRef(1)))
    anon$3 := f$get$TF$T$CustomList$T$Int(customList, df$intToRef(0))
  }
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

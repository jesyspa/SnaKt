/is_type_contract.kt:(157,165): info: Generated Viper text for isString:
method f$isString$TF$NT$Any(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
  ensures df$boolFromRef(ret$0) == true ==>
    df$isSubtype(df$typeOf(x), df$stringType())
{
  inhale df$isSubtype(df$typeOf(x), df$nullable(df$anyType()))
  ret$0 := df$boolToRef(df$isSubtype(df$typeOf(x), df$stringType()))
  goto lbl$0
  label lbl$0
}

/is_type_contract.kt:(322,330): info: Generated Viper text for isString:
method f$isString$TF$T$Any(this$extension: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
  ensures df$boolFromRef(ret$0) == true ==>
    df$isSubtype(df$typeOf(this$extension), df$stringType())
{
  inhale df$isSubtype(df$typeOf(this$extension), df$anyType())
  ret$0 := df$boolToRef(df$isSubtype(df$typeOf(this$extension), df$stringType()))
  goto lbl$0
  label lbl$0
}

/is_type_contract.kt:(491,508): info: Generated Viper text for subtypeTransitive:
method f$subtypeTransitive$TF$T$Unit(x: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
  ensures true ==> df$isSubtype(df$typeOf(x), df$nullable(df$anyType()))
{
  inhale df$isSubtype(df$typeOf(x), df$unitType())
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/is_type_contract.kt:(686,707): info: Generated Viper text for constructorReturnType:
field bf$bar: Ref

method con$() returns (ret: Ref)
  ensures df$isSubtype(df$typeOf(ret), df$c$Foo())
  ensures acc(p$c$Foo$shared(ret), wildcard)
  ensures acc(p$c$Foo$unique(ret), write)


method f$constructorReturnType$TF$() returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
  ensures df$boolFromRef(ret$0) == true
{
  var anon$0: Ref
  anon$0 := con$()
  ret$0 := df$boolToRef(df$isSubtype(df$typeOf(anon$0), df$c$Foo()))
  goto lbl$0
  label lbl$0
}

/is_type_contract.kt:(832,848): info: Generated Viper text for subtypeSuperType:
field bf$bar: Ref

method f$subtypeSuperType$TF$T$Bar(bar: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$unitType())
  ensures true ==> df$isSubtype(df$typeOf(bar), df$c$Foo())
{
  inhale df$isSubtype(df$typeOf(bar), df$c$Bar())
  inhale acc(p$c$Bar$shared(bar), wildcard)
  label lbl$0
  inhale df$isSubtype(df$typeOf(ret$0), df$unitType())
}

/is_type_contract.kt:(965,976): info: Generated Viper text for typeOfField:
field bf$bar: Ref

method f$typeOfField$TF$T$Foo(foo: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$boolType())
  ensures df$boolFromRef(ret$0) == true
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(foo), df$c$Foo())
  inhale acc(p$c$Foo$shared(foo), wildcard)
  unfold acc(p$c$Foo$shared(foo), wildcard)
  anon$0 := foo.bf$bar
  ret$0 := df$boolToRef(df$isSubtype(df$typeOf(anon$0), df$c$Bar()))
  goto lbl$0
  label lbl$0
}

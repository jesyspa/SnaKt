/as_type_contract.kt:(152,162): info: Generated Viper text for asOperator:
method f$asOperator$TF$T$Foo(foo: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$c$Bar())
  ensures acc(p$c$Bar$shared(ret$0), wildcard)
  ensures true ==> df$isSubtype(df$typeOf(foo), df$c$Bar())
{
  inhale df$isSubtype(df$typeOf(foo), df$c$Foo())
  inhale acc(p$c$Foo$shared(foo), wildcard)
  inhale df$isSubtype(df$typeOf(foo), df$c$Bar())
  inhale acc(p$c$Bar$shared(foo), wildcard)
  ret$0 := foo
  goto lbl$0
  label lbl$0
}

/as_type_contract.kt:(307,321): info: Generated Viper text for safeAsOperator:
method f$safeAsOperator$TF$T$Foo(foo: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$nullable(df$c$Bar()))
  ensures ret$0 != df$nullValue() ==> acc(p$c$Bar$shared(ret$0), wildcard)
  ensures ret$0 != df$nullValue() ==>
    df$isSubtype(df$typeOf(foo), df$c$Bar())
{
  inhale df$isSubtype(df$typeOf(foo), df$c$Foo())
  inhale acc(p$c$Foo$shared(foo), wildcard)
  inhale df$isSubtype(df$typeOf(foo), df$nullable(df$c$Bar()))
  inhale foo != df$nullValue() ==> acc(p$c$Bar$shared(foo), wildcard)
  ret$0 := foo
  goto lbl$0
  label lbl$0
}

/as_type_contract.kt:(504,508): info: Generated Viper text for getX:
field bf$x: Ref

method f$getX$TF$T$Any(a: Ref) returns (ret$0: Ref)
  ensures df$isSubtype(df$typeOf(ret$0), df$nullable(df$intType()))
  ensures ret$0 != df$nullValue() ==>
    df$isSubtype(df$typeOf(a), df$c$IntHolder())
  ensures ret$0 == df$nullValue() ==>
    !df$isSubtype(df$typeOf(a), df$c$IntHolder())
{
  var anon$0: Ref
  inhale df$isSubtype(df$typeOf(a), df$anyType())
  if (df$isSubtype(df$typeOf(a), df$c$IntHolder())) {
    anon$0 := a
  } else {
    anon$0 := df$nullValue()}
  inhale df$isSubtype(df$typeOf(anon$0), df$nullable(df$c$IntHolder()))
  inhale anon$0 != df$nullValue() ==>
    acc(p$c$IntHolder$shared(anon$0), wildcard)
  if (anon$0 != df$nullValue()) {
    var anon$1: Ref
    unfold acc(p$c$IntHolder$shared(anon$0), wildcard)
    anon$1 := anon$0.bf$x
    ret$0 := anon$1
  } else {
    ret$0 := df$nullValue()}
  goto lbl$0
  label lbl$0
}

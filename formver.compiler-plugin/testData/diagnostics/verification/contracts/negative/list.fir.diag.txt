/list.kt:(91,110): info: Generated Viper text for empty_list_expr_get:
field sp_size: Ref

method f_emptyList_TF_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_pkg$kotlin_collections_List())
  ensures acc(ret.sp_size, write)
  ensures df_intFromRef(ret.sp_size) >= 0
  ensures acc(p_pkg$kotlin_collections$c_List_shared(ret), wildcard)
  ensures df_intFromRef(ret.sp_size) == 0


method f_empty_list_expr_get_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var s: Ref
  var anon_0: Ref
  anon_0 := f_emptyList_TF_()
  s := f_get_TF_T_List_T_Int(anon_0, df_intToRef(0))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_get_TF_T_List_T_Int(this$dispatch: Ref, index: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp_size, write)
  requires df_intFromRef(this$dispatch.sp_size) >= 0
  requires df_intFromRef(index) >= 0
  requires df_intFromRef(this$dispatch.sp_size) > df_intFromRef(index)
  ensures acc(this$dispatch.sp_size, write)
  ensures df_intFromRef(this$dispatch.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret), df_intType())
  ensures df_intFromRef(this$dispatch.sp_size) ==
    old(df_intFromRef(this$dispatch.sp_size))


/list.kt:(127,146): warning: Invalid index for the following list sub-expression, the index may be greater than the list's size.

/list.kt:(168,182): info: Generated Viper text for empty_list_get:
field sp_size: Ref

method f_emptyList_TF_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_pkg$kotlin_collections_List())
  ensures acc(ret.sp_size, write)
  ensures df_intFromRef(ret.sp_size) >= 0
  ensures acc(p_pkg$kotlin_collections$c_List_shared(ret), wildcard)
  ensures df_intFromRef(ret.sp_size) == 0


method f_empty_list_get_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var myList: Ref
  var s: Ref
  myList := f_emptyList_TF_()
  s := f_get_TF_T_List_T_Int(myList, df_intToRef(0))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_get_TF_T_List_T_Int(this$dispatch: Ref, index: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp_size, write)
  requires df_intFromRef(this$dispatch.sp_size) >= 0
  requires df_intFromRef(index) >= 0
  requires df_intFromRef(this$dispatch.sp_size) > df_intFromRef(index)
  ensures acc(this$dispatch.sp_size, write)
  ensures df_intFromRef(this$dispatch.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret), df_intType())
  ensures df_intFromRef(this$dispatch.sp_size) ==
    old(df_intFromRef(this$dispatch.sp_size))


/list.kt:(239,248): warning: Invalid index for list 'myList', the index may be greater than the list's size.

/list.kt:(270,281): info: Generated Viper text for unsafe_last:
field sp_size: Ref

method f_get_TF_T_List_T_Int(this$dispatch: Ref, index: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp_size, write)
  requires df_intFromRef(this$dispatch.sp_size) >= 0
  requires df_intFromRef(index) >= 0
  requires df_intFromRef(this$dispatch.sp_size) > df_intFromRef(index)
  ensures acc(this$dispatch.sp_size, write)
  ensures df_intFromRef(this$dispatch.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret), df_intType())
  ensures df_intFromRef(this$dispatch.sp_size) ==
    old(df_intFromRef(this$dispatch.sp_size))


method f_unsafe_last_TF_T_List(l: Ref) returns (ret_0: Ref)
  requires acc(l.sp_size, write)
  requires df_intFromRef(l.sp_size) >= 0
  ensures acc(l.sp_size, write)
  ensures df_intFromRef(l.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
{
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(l), df_c_pkg$kotlin_collections_List())
  inhale acc(p_pkg$kotlin_collections$c_List_shared(l), wildcard)
  anon_0 := l.sp_size
  inhale df_isSubtype(df_typeOf(anon_0), df_intType())
  ret_0 := f_get_TF_T_List_T_Int(l, sp_minusInts(anon_0, df_intToRef(1)))
  goto lbl_0
  label lbl_0
}

/list.kt:(315,328): warning: Invalid index for list 'l', the index may be less than zero.

/list.kt:(350,357): info: Generated Viper text for add_get:
field sp_size: Ref

method f_add_TF_T_MutableList_T_Int(this$dispatch: Ref, element: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp_size, write)
  requires df_intFromRef(this$dispatch.sp_size) >= 0
  ensures acc(this$dispatch.sp_size, write)
  ensures df_intFromRef(this$dispatch.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret), df_boolType())
  ensures df_intFromRef(this$dispatch.sp_size) ==
    old(df_intFromRef(this$dispatch.sp_size)) + 1


method f_add_get_TF_T_MutableList(l: Ref) returns (ret_0: Ref)
  requires acc(l.sp_size, write)
  requires df_intFromRef(l.sp_size) >= 0
  ensures acc(l.sp_size, write)
  ensures df_intFromRef(l.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var anon_0: Ref
  var n: Ref
  inhale df_isSubtype(df_typeOf(l), df_c_pkg$kotlin_collections_MutableList())
  inhale acc(p_pkg$kotlin_collections$c_MutableList_shared(l), wildcard)
  anon_0 := f_add_TF_T_MutableList_T_Int(l, df_intToRef(1))
  n := f_get_TF_T_MutableList_T_Int(l, df_intToRef(1))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_get_TF_T_MutableList_T_Int(this$dispatch: Ref, index: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp_size, write)
  requires df_intFromRef(this$dispatch.sp_size) >= 0
  requires df_intFromRef(index) >= 0
  requires df_intFromRef(this$dispatch.sp_size) > df_intFromRef(index)
  ensures acc(this$dispatch.sp_size, write)
  ensures df_intFromRef(this$dispatch.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret), df_intType())
  ensures df_intFromRef(this$dispatch.sp_size) ==
    old(df_intFromRef(this$dispatch.sp_size))


/list.kt:(406,410): warning: Invalid index for list 'l', the index may be greater than the list's size.

/list.kt:(432,446): info: Generated Viper text for empty_list_sub:
field sp_size: Ref

method f_emptyList_TF_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_pkg$kotlin_collections_List())
  ensures acc(ret.sp_size, write)
  ensures df_intFromRef(ret.sp_size) >= 0
  ensures acc(p_pkg$kotlin_collections$c_List_shared(ret), wildcard)
  ensures df_intFromRef(ret.sp_size) == 0


method f_empty_list_sub_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var l: Ref
  var anon_0: Ref
  anon_0 := f_emptyList_TF_()
  l := f_subList_TF_T_List_T_Int_T_Int(anon_0, df_intToRef(0), df_intToRef(1))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_subList_TF_T_List_T_Int_T_Int(this$dispatch: Ref, fromIndex: Ref, toIndex: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp_size, write)
  requires df_intFromRef(this$dispatch.sp_size) >= 0
  requires df_intFromRef(fromIndex) <= df_intFromRef(toIndex)
  requires df_intFromRef(fromIndex) >= 0
  requires df_intFromRef(toIndex) <= df_intFromRef(this$dispatch.sp_size)
  ensures acc(this$dispatch.sp_size, write)
  ensures df_intFromRef(this$dispatch.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret), df_c_pkg$kotlin_collections_List())
  ensures acc(ret.sp_size, write)
  ensures df_intFromRef(ret.sp_size) >= 0
  ensures acc(p_pkg$kotlin_collections$c_List_shared(ret), wildcard)
  ensures df_intFromRef(this$dispatch.sp_size) ==
    old(df_intFromRef(this$dispatch.sp_size))
  ensures df_intFromRef(ret.sp_size) ==
    df_intFromRef(toIndex) - df_intFromRef(fromIndex)


/list.kt:(463,493): warning: Invalid sub-list range for the following list sub-expression, the range may be greater than the list's size.

/list.kt:(515,538): info: Generated Viper text for empty_list_sub_negative:
field sp_size: Ref

method f_emptyList_TF_() returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_c_pkg$kotlin_collections_List())
  ensures acc(ret.sp_size, write)
  ensures df_intFromRef(ret.sp_size) >= 0
  ensures acc(p_pkg$kotlin_collections$c_List_shared(ret), wildcard)
  ensures df_intFromRef(ret.sp_size) == 0


method f_empty_list_sub_negative_TF_() returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_unitType())
{
  var l: Ref
  var anon_0: Ref
  anon_0 := f_emptyList_TF_()
  l := f_subList_TF_T_List_T_Int_T_Int(anon_0, df_intToRef(-1), df_intToRef(1))
  label lbl_0
  inhale df_isSubtype(df_typeOf(ret_0), df_unitType())
}

method f_subList_TF_T_List_T_Int_T_Int(this$dispatch: Ref, fromIndex: Ref, toIndex: Ref)
  returns (ret: Ref)
  requires acc(this$dispatch.sp_size, write)
  requires df_intFromRef(this$dispatch.sp_size) >= 0
  requires df_intFromRef(fromIndex) <= df_intFromRef(toIndex)
  requires df_intFromRef(fromIndex) >= 0
  requires df_intFromRef(toIndex) <= df_intFromRef(this$dispatch.sp_size)
  ensures acc(this$dispatch.sp_size, write)
  ensures df_intFromRef(this$dispatch.sp_size) >= 0
  ensures df_isSubtype(df_typeOf(ret), df_c_pkg$kotlin_collections_List())
  ensures acc(ret.sp_size, write)
  ensures df_intFromRef(ret.sp_size) >= 0
  ensures acc(p_pkg$kotlin_collections$c_List_shared(ret), wildcard)
  ensures df_intFromRef(this$dispatch.sp_size) ==
    old(df_intFromRef(this$dispatch.sp_size))
  ensures df_intFromRef(ret.sp_size) ==
    df_intFromRef(toIndex) - df_intFromRef(fromIndex)


/list.kt:(555,586): warning: Invalid sub-list range for the following list sub-expression, the range may be including negative indices.

/z_function.kt:(187,198): info: Generated Viper text for zFuncHelper:
method f_zFuncHelper_TF_T_String_T_String_T_Int_T_Int_T_Int(s: Ref, res: Ref,
  i: Ref, checkedLeft: Ref, checkedRight: Ref)
  returns (ret_0: Ref)
  requires 1 <= df_intFromRef(i) &&
    df_intFromRef(i) < |df_stringFromRef(s)|
  requires |df_stringFromRef(res)| == df_intFromRef(i)
  requires 0 <= df_intFromRef(checkedLeft) &&
    df_intFromRef(checkedLeft) <= df_intFromRef(checkedRight) &&
    df_intFromRef(checkedRight) <= |df_stringFromRef(s)|
  requires df_intFromRef(checkedLeft) < df_intFromRef(i)
  requires (forall anon$builtin_4: Int ::0 <= anon$builtin_4 &&
      anon$builtin_4 < df_intFromRef(i) ==>
      48 <= df_stringFromRef(res)[anon$builtin_4] &&
      df_stringFromRef(res)[anon$builtin_4] <=
      48 + |df_stringFromRef(s)| - anon$builtin_4 &&
      (forall anon$builtin_5: Int ::0 <= anon$builtin_5 &&
        anon$builtin_5 < df_stringFromRef(res)[anon$builtin_4] - 48 ==>
        df_stringFromRef(s)[anon$builtin_5] ==
        df_stringFromRef(s)[anon$builtin_4 + anon$builtin_5]) &&
      (df_stringFromRef(res)[anon$builtin_4] - 48 ==
      |df_stringFromRef(s)| - anon$builtin_4 ||
      !(df_stringFromRef(s)[anon$builtin_4 +
      (df_stringFromRef(res)[anon$builtin_4] - 48)] ==
      df_stringFromRef(s)[df_stringFromRef(res)[anon$builtin_4] - 48])))
  requires (forall anon$builtin_6: Int ::0 <= anon$builtin_6 &&
      anon$builtin_6 <
      df_intFromRef(checkedRight) - df_intFromRef(checkedLeft) ==>
      df_stringFromRef(s)[df_intFromRef(checkedLeft) + anon$builtin_6] ==
      df_stringFromRef(s)[anon$builtin_6])
  ensures df_isSubtype(df_typeOf(ret_0), df_intType())
  ensures df_intFromRef(i) <= df_intFromRef(ret_0) &&
    df_intFromRef(ret_0) <= |df_stringFromRef(s)|
  ensures (forall anon$builtin_7: Int ::df_intFromRef(i) <= anon$builtin_7 &&
      anon$builtin_7 < df_intFromRef(ret_0) ==>
      df_stringFromRef(s)[anon$builtin_7 - df_intFromRef(i)] ==
      df_stringFromRef(s)[anon$builtin_7])
{
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(s), df_stringType())
  inhale df_isSubtype(df_typeOf(res), df_stringType())
  inhale df_isSubtype(df_typeOf(i), df_intType())
  inhale df_isSubtype(df_typeOf(checkedLeft), df_intType())
  inhale df_isSubtype(df_typeOf(checkedRight), df_intType())
  if (df_intFromRef(checkedLeft) == 0) {
    anon_0 := df_boolToRef(true)
  } else {
    anon_0 := sp_leInts(checkedRight, i)}
  if (df_boolFromRef(anon_0)) {
    ret_0 := i
  } else {
    var bound: Ref
    bound := sp_plusInts(i, sp_subChars(sp_stringGet(res, sp_minusInts(i, checkedLeft)),
      df_charToRef(48)))
    if (df_intFromRef(bound) < df_intFromRef(checkedRight)) {
      ret_0 := bound
    } else {
      ret_0 := checkedRight}
  }
  goto lbl_0
  label lbl_0
}

/z_function.kt:(1389,1398): info: Generated Viper text for zFunction:
method f_plus_TF_T_String_NT_Any(this$dispatch: Ref, p_other: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_stringType())


method f_zFuncHelper_TF_T_String_T_String_T_Int_T_Int_T_Int(p_s: Ref, p_res: Ref,
  p_i: Ref, p_checkedLeft: Ref, p_checkedRight: Ref)
  returns (ret: Ref)
  requires 1 <= df_intFromRef(p_i) &&
    df_intFromRef(p_i) < |df_stringFromRef(p_s)|
  requires |df_stringFromRef(p_res)| == df_intFromRef(p_i)
  requires 0 <= df_intFromRef(p_checkedLeft) &&
    df_intFromRef(p_checkedLeft) <= df_intFromRef(p_checkedRight) &&
    df_intFromRef(p_checkedRight) <= |df_stringFromRef(p_s)|
  requires df_intFromRef(p_checkedLeft) < df_intFromRef(p_i)
  requires (forall anon$builtin_13: Int ::0 <= anon$builtin_13 &&
      anon$builtin_13 < df_intFromRef(p_i) ==>
      48 <= df_stringFromRef(p_res)[anon$builtin_13] &&
      df_stringFromRef(p_res)[anon$builtin_13] <=
      48 + |df_stringFromRef(p_s)| - anon$builtin_13 &&
      (forall anon$builtin_14: Int ::0 <= anon$builtin_14 &&
        anon$builtin_14 < df_stringFromRef(p_res)[anon$builtin_13] - 48 ==>
        df_stringFromRef(p_s)[anon$builtin_14] ==
        df_stringFromRef(p_s)[anon$builtin_13 + anon$builtin_14]) &&
      (df_stringFromRef(p_res)[anon$builtin_13] - 48 ==
      |df_stringFromRef(p_s)| - anon$builtin_13 ||
      !(df_stringFromRef(p_s)[anon$builtin_13 +
      (df_stringFromRef(p_res)[anon$builtin_13] - 48)] ==
      df_stringFromRef(p_s)[df_stringFromRef(p_res)[anon$builtin_13] - 48])))
  requires (forall anon$builtin_15: Int ::0 <= anon$builtin_15 &&
      anon$builtin_15 <
      df_intFromRef(p_checkedRight) - df_intFromRef(p_checkedLeft) ==>
      df_stringFromRef(p_s)[df_intFromRef(p_checkedLeft) + anon$builtin_15] ==
      df_stringFromRef(p_s)[anon$builtin_15])
  ensures df_isSubtype(df_typeOf(ret), df_intType())
  ensures df_intFromRef(p_i) <= df_intFromRef(ret) &&
    df_intFromRef(ret) <= |df_stringFromRef(p_s)|
  ensures (forall anon$builtin_16: Int ::df_intFromRef(p_i) <=
      anon$builtin_16 &&
      anon$builtin_16 < df_intFromRef(ret) ==>
      df_stringFromRef(p_s)[anon$builtin_16 - df_intFromRef(p_i)] ==
      df_stringFromRef(p_s)[anon$builtin_16])


method f_zFunction_TF_T_String(this$extension: Ref) returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_stringType())
  ensures |df_stringFromRef(ret_0)| == |df_stringFromRef(this$extension)|
  ensures (forall anon$builtin_11: Int ::0 <= anon$builtin_11 &&
      anon$builtin_11 < |df_stringFromRef(this$extension)| ==>
      48 <= df_stringFromRef(ret_0)[anon$builtin_11] &&
      df_stringFromRef(ret_0)[anon$builtin_11] <=
      48 + |df_stringFromRef(this$extension)| - anon$builtin_11 &&
      (forall anon$builtin_12: Int ::0 <= anon$builtin_12 &&
        anon$builtin_12 < df_stringFromRef(ret_0)[anon$builtin_11] - 48 ==>
        df_stringFromRef(this$extension)[anon$builtin_12] ==
        df_stringFromRef(this$extension)[anon$builtin_11 + anon$builtin_12]) &&
      (df_stringFromRef(ret_0)[anon$builtin_11] - 48 ==
      |df_stringFromRef(this$extension)| - anon$builtin_11 ||
      !(df_stringFromRef(this$extension)[anon$builtin_11 +
      (df_stringFromRef(ret_0)[anon$builtin_11] - 48)] ==
      df_stringFromRef(this$extension)[df_stringFromRef(ret_0)[anon$builtin_11] -
      48])))
{
  var l0_i: Ref
  var l0_res: Ref
  var l0_checkedLeft: Ref
  var l0_checkedRight: Ref
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(this$extension), df_stringType())
  if (|df_stringFromRef(this$extension)| == 0) {
    ret_0 := this$extension
    goto lbl_ret_0
  }
  l0_i := df_intToRef(1)
  l0_res := sp_addStringChar(df_stringToRef(Seq[Int]()), sp_addCharInt(df_charToRef(48),
    sp_stringLength(this$extension)))
  l0_checkedLeft := df_intToRef(0)
  l0_checkedRight := df_intToRef(0)
  label lbl_continue_0
    invariant df_isSubtype(df_typeOf(l0_i), df_intType())
    invariant df_isSubtype(df_typeOf(l0_res), df_stringType())
    invariant df_isSubtype(df_typeOf(l0_checkedLeft), df_intType())
    invariant df_isSubtype(df_typeOf(l0_checkedRight), df_intType())
    invariant |df_stringFromRef(l0_res)| == df_intFromRef(l0_i)
    invariant 1 <= df_intFromRef(l0_i) &&
      df_intFromRef(l0_i) <= |df_stringFromRef(this$extension)|
    invariant (forall anon$builtin_2: Int ::0 <= anon$builtin_2 &&
        anon$builtin_2 < df_intFromRef(l0_i) ==>
        48 <= df_stringFromRef(l0_res)[anon$builtin_2] &&
        df_stringFromRef(l0_res)[anon$builtin_2] <=
        48 + |df_stringFromRef(this$extension)| - anon$builtin_2 &&
        (forall anon$builtin_3: Int ::0 <= anon$builtin_3 &&
          anon$builtin_3 < df_stringFromRef(l0_res)[anon$builtin_2] - 48 ==>
          df_stringFromRef(this$extension)[anon$builtin_3] ==
          df_stringFromRef(this$extension)[anon$builtin_2 + anon$builtin_3]) &&
        (df_stringFromRef(l0_res)[anon$builtin_2] - 48 ==
        |df_stringFromRef(this$extension)| - anon$builtin_2 ||
        !(df_stringFromRef(this$extension)[anon$builtin_2 +
        (df_stringFromRef(l0_res)[anon$builtin_2] - 48)] ==
        df_stringFromRef(this$extension)[df_stringFromRef(l0_res)[anon$builtin_2] -
        48])))
    invariant 0 <= df_intFromRef(l0_checkedLeft) &&
      df_intFromRef(l0_checkedLeft) <= df_intFromRef(l0_checkedRight) &&
      df_intFromRef(l0_checkedRight) <= |df_stringFromRef(this$extension)|
    invariant df_intFromRef(l0_checkedLeft) < df_intFromRef(l0_i)
    invariant (forall anon$builtin_4: Int ::0 <= anon$builtin_4 &&
        anon$builtin_4 <
        df_intFromRef(l0_checkedRight) - df_intFromRef(l0_checkedLeft) ==>
        df_stringFromRef(this$extension)[df_intFromRef(l0_checkedLeft) +
        anon$builtin_4] ==
        df_stringFromRef(this$extension)[anon$builtin_4])
  anon_0 := sp_ltInts(l0_i, sp_stringLength(this$extension))
  if (df_boolFromRef(anon_0)) {
    var l3_j: Ref
    var anon_1: Ref
    l3_j := f_zFuncHelper_TF_T_String_T_String_T_Int_T_Int_T_Int(this$extension,
      l0_res, l0_i, l0_checkedLeft, l0_checkedRight)
    label lbl_continue_1
      invariant df_isSubtype(df_typeOf(l3_j), df_intType())
      invariant df_isSubtype(df_typeOf(l0_i), df_intType())
      invariant df_isSubtype(df_typeOf(l0_res), df_stringType())
      invariant df_isSubtype(df_typeOf(l0_checkedLeft), df_intType())
      invariant df_isSubtype(df_typeOf(l0_checkedRight), df_intType())
      invariant df_intFromRef(l0_i) <= df_intFromRef(l3_j) &&
        df_intFromRef(l3_j) <= |df_stringFromRef(this$extension)|
      invariant (forall anon$builtin_9: Int ::df_intFromRef(l0_checkedLeft) <=
          anon$builtin_9 &&
          anon$builtin_9 < df_intFromRef(l0_checkedRight) ==>
          df_stringFromRef(this$extension)[anon$builtin_9 -
          df_intFromRef(l0_checkedLeft)] ==
          df_stringFromRef(this$extension)[anon$builtin_9])
      invariant (forall anon$builtin_10: Int ::df_intFromRef(l0_i) <=
          anon$builtin_10 &&
          anon$builtin_10 < df_intFromRef(l3_j) ==>
          df_stringFromRef(this$extension)[anon$builtin_10 -
          df_intFromRef(l0_i)] ==
          df_stringFromRef(this$extension)[anon$builtin_10])
    if (df_intFromRef(l3_j) < |df_stringFromRef(this$extension)|) {
      anon_1 := df_boolToRef(df_stringFromRef(this$extension)[df_intFromRef(l3_j) -
        df_intFromRef(l0_i)] ==
        df_stringFromRef(this$extension)[df_intFromRef(l3_j)])
    } else {
      anon_1 := df_boolToRef(false)}
    if (df_boolFromRef(anon_1)) {
      l3_j := sp_plusInts(l3_j, df_intToRef(1))
      goto lbl_continue_1
    }
    label lbl_break_1
    assert df_isSubtype(df_typeOf(l3_j), df_intType())
    assert df_isSubtype(df_typeOf(l0_i), df_intType())
    assert df_isSubtype(df_typeOf(l0_res), df_stringType())
    assert df_isSubtype(df_typeOf(l0_checkedLeft), df_intType())
    assert df_isSubtype(df_typeOf(l0_checkedRight), df_intType())
    assert df_intFromRef(l0_i) <= df_intFromRef(l3_j) &&
      df_intFromRef(l3_j) <= |df_stringFromRef(this$extension)|
    assert (forall anon$builtin_9: Int ::df_intFromRef(l0_checkedLeft) <=
        anon$builtin_9 &&
        anon$builtin_9 < df_intFromRef(l0_checkedRight) ==>
        df_stringFromRef(this$extension)[anon$builtin_9 -
        df_intFromRef(l0_checkedLeft)] ==
        df_stringFromRef(this$extension)[anon$builtin_9])
    assert (forall anon$builtin_10: Int ::df_intFromRef(l0_i) <=
        anon$builtin_10 &&
        anon$builtin_10 < df_intFromRef(l3_j) ==>
        df_stringFromRef(this$extension)[anon$builtin_10 -
        df_intFromRef(l0_i)] ==
        df_stringFromRef(this$extension)[anon$builtin_10])
    l0_res := sp_addStringChar(l0_res, sp_addCharInt(df_charToRef(48), sp_minusInts(l3_j,
      l0_i)))
    if (df_intFromRef(l3_j) > df_intFromRef(l0_checkedRight)) {
      l0_checkedLeft := l0_i
      l0_checkedRight := l3_j
    }
    l0_i := sp_plusInts(l0_i, df_intToRef(1))
    goto lbl_continue_0
  }
  label lbl_break_0
  assert df_isSubtype(df_typeOf(l0_i), df_intType())
  assert df_isSubtype(df_typeOf(l0_res), df_stringType())
  assert df_isSubtype(df_typeOf(l0_checkedLeft), df_intType())
  assert df_isSubtype(df_typeOf(l0_checkedRight), df_intType())
  assert |df_stringFromRef(l0_res)| == df_intFromRef(l0_i)
  assert 1 <= df_intFromRef(l0_i) &&
    df_intFromRef(l0_i) <= |df_stringFromRef(this$extension)|
  assert (forall anon$builtin_2: Int ::0 <= anon$builtin_2 &&
      anon$builtin_2 < df_intFromRef(l0_i) ==>
      48 <= df_stringFromRef(l0_res)[anon$builtin_2] &&
      df_stringFromRef(l0_res)[anon$builtin_2] <=
      48 + |df_stringFromRef(this$extension)| - anon$builtin_2 &&
      (forall anon$builtin_3: Int ::0 <= anon$builtin_3 &&
        anon$builtin_3 < df_stringFromRef(l0_res)[anon$builtin_2] - 48 ==>
        df_stringFromRef(this$extension)[anon$builtin_3] ==
        df_stringFromRef(this$extension)[anon$builtin_2 + anon$builtin_3]) &&
      (df_stringFromRef(l0_res)[anon$builtin_2] - 48 ==
      |df_stringFromRef(this$extension)| - anon$builtin_2 ||
      !(df_stringFromRef(this$extension)[anon$builtin_2 +
      (df_stringFromRef(l0_res)[anon$builtin_2] - 48)] ==
      df_stringFromRef(this$extension)[df_stringFromRef(l0_res)[anon$builtin_2] -
      48])))
  assert 0 <= df_intFromRef(l0_checkedLeft) &&
    df_intFromRef(l0_checkedLeft) <= df_intFromRef(l0_checkedRight) &&
    df_intFromRef(l0_checkedRight) <= |df_stringFromRef(this$extension)|
  assert df_intFromRef(l0_checkedLeft) < df_intFromRef(l0_i)
  assert (forall anon$builtin_4: Int ::0 <= anon$builtin_4 &&
      anon$builtin_4 <
      df_intFromRef(l0_checkedRight) - df_intFromRef(l0_checkedLeft) ==>
      df_stringFromRef(this$extension)[df_intFromRef(l0_checkedLeft) +
      anon$builtin_4] ==
      df_stringFromRef(this$extension)[anon$builtin_4])
  ret_0 := l0_res
  goto lbl_ret_0
  label lbl_ret_0
}

/z_function.kt:(3481,3495): info: Generated Viper text for zFunctionNaive:
method f_plus_TF_T_String_NT_Any(this$dispatch: Ref, other: Ref)
  returns (ret: Ref)
  ensures df_isSubtype(df_typeOf(ret), df_stringType())


method f_zFunctionNaive_TF_T_String(this$extension: Ref)
  returns (ret_0: Ref)
  ensures df_isSubtype(df_typeOf(ret_0), df_stringType())
  ensures |df_stringFromRef(ret_0)| == |df_stringFromRef(this$extension)|
  ensures (forall anon$builtin_5: Int ::0 <= anon$builtin_5 &&
      anon$builtin_5 < |df_stringFromRef(this$extension)| ==>
      48 <= df_stringFromRef(ret_0)[anon$builtin_5] &&
      df_stringFromRef(ret_0)[anon$builtin_5] <=
      48 + |df_stringFromRef(this$extension)| - anon$builtin_5 &&
      (forall anon$builtin_6: Int ::0 <= anon$builtin_6 &&
        anon$builtin_6 < df_stringFromRef(ret_0)[anon$builtin_5] - 48 ==>
        df_stringFromRef(this$extension)[anon$builtin_6] ==
        df_stringFromRef(this$extension)[anon$builtin_5 + anon$builtin_6]) &&
      (df_stringFromRef(ret_0)[anon$builtin_5] - 48 ==
      |df_stringFromRef(this$extension)| - anon$builtin_5 ||
      !(df_stringFromRef(this$extension)[anon$builtin_5 +
      (df_stringFromRef(ret_0)[anon$builtin_5] - 48)] ==
      df_stringFromRef(this$extension)[df_stringFromRef(ret_0)[anon$builtin_5] -
      48])))
{
  var i: Ref
  var res: Ref
  var anon_0: Ref
  inhale df_isSubtype(df_typeOf(this$extension), df_stringType())
  if (|df_stringFromRef(this$extension)| == 0) {
    ret_0 := this$extension
    goto lbl_ret_0
  }
  i := df_intToRef(1)
  res := sp_addStringChar(df_stringToRef(Seq[Int]()), sp_addCharInt(df_charToRef(48),
    sp_stringLength(this$extension)))
  label lbl_continue_0
    invariant df_isSubtype(df_typeOf(i), df_intType())
    invariant df_isSubtype(df_typeOf(res), df_stringType())
    invariant |df_stringFromRef(res)| == df_intFromRef(i)
    invariant 0 <= df_intFromRef(i) &&
      df_intFromRef(i) <= |df_stringFromRef(this$extension)|
    invariant (forall anon$builtin_2: Int ::0 <= anon$builtin_2 &&
        anon$builtin_2 < df_intFromRef(i) ==>
        48 <= df_stringFromRef(res)[anon$builtin_2] &&
        df_stringFromRef(res)[anon$builtin_2] <=
        48 + |df_stringFromRef(this$extension)| - anon$builtin_2 &&
        (forall anon$builtin_3: Int ::0 <= anon$builtin_3 &&
          anon$builtin_3 < df_stringFromRef(res)[anon$builtin_2] - 48 ==>
          df_stringFromRef(this$extension)[anon$builtin_3] ==
          df_stringFromRef(this$extension)[anon$builtin_2 + anon$builtin_3]) &&
        (df_stringFromRef(res)[anon$builtin_2] - 48 ==
        |df_stringFromRef(this$extension)| - anon$builtin_2 ||
        !(df_stringFromRef(this$extension)[anon$builtin_2 +
        (df_stringFromRef(res)[anon$builtin_2] - 48)] ==
        df_stringFromRef(this$extension)[df_stringFromRef(res)[anon$builtin_2] -
        48])))
  anon_0 := sp_ltInts(i, sp_stringLength(this$extension))
  if (df_boolFromRef(anon_0)) {
    var j: Ref
    var anon_1: Ref
    j := i
    label lbl_continue_1
      invariant df_isSubtype(df_typeOf(j), df_intType())
      invariant df_isSubtype(df_typeOf(i), df_intType())
      invariant df_isSubtype(df_typeOf(res), df_stringType())
      invariant df_intFromRef(i) <= df_intFromRef(j) &&
        df_intFromRef(j) <= |df_stringFromRef(this$extension)|
      invariant (forall anon$builtin_4: Int ::0 <= anon$builtin_4 &&
          anon$builtin_4 < df_intFromRef(j) - df_intFromRef(i) ==>
          df_stringFromRef(this$extension)[df_intFromRef(i) +
          anon$builtin_4] ==
          df_stringFromRef(this$extension)[anon$builtin_4])
    if (df_intFromRef(j) < |df_stringFromRef(this$extension)|) {
      anon_1 := df_boolToRef(df_stringFromRef(this$extension)[df_intFromRef(j) -
        df_intFromRef(i)] ==
        df_stringFromRef(this$extension)[df_intFromRef(j)])
    } else {
      anon_1 := df_boolToRef(false)}
    if (df_boolFromRef(anon_1)) {
      j := sp_plusInts(j, df_intToRef(1))
      goto lbl_continue_1
    }
    label lbl_break_1
    assert df_isSubtype(df_typeOf(j), df_intType())
    assert df_isSubtype(df_typeOf(i), df_intType())
    assert df_isSubtype(df_typeOf(res), df_stringType())
    assert df_intFromRef(i) <= df_intFromRef(j) &&
      df_intFromRef(j) <= |df_stringFromRef(this$extension)|
    assert (forall anon$builtin_4: Int ::0 <= anon$builtin_4 &&
        anon$builtin_4 < df_intFromRef(j) - df_intFromRef(i) ==>
        df_stringFromRef(this$extension)[df_intFromRef(i) + anon$builtin_4] ==
        df_stringFromRef(this$extension)[anon$builtin_4])
    res := sp_addStringChar(res, sp_addCharInt(df_charToRef(48), sp_minusInts(j,
      i)))
    i := sp_plusInts(i, df_intToRef(1))
    goto lbl_continue_0
  }
  label lbl_break_0
  assert df_isSubtype(df_typeOf(i), df_intType())
  assert df_isSubtype(df_typeOf(res), df_stringType())
  assert |df_stringFromRef(res)| == df_intFromRef(i)
  assert 0 <= df_intFromRef(i) &&
    df_intFromRef(i) <= |df_stringFromRef(this$extension)|
  assert (forall anon$builtin_2: Int ::0 <= anon$builtin_2 &&
      anon$builtin_2 < df_intFromRef(i) ==>
      48 <= df_stringFromRef(res)[anon$builtin_2] &&
      df_stringFromRef(res)[anon$builtin_2] <=
      48 + |df_stringFromRef(this$extension)| - anon$builtin_2 &&
      (forall anon$builtin_3: Int ::0 <= anon$builtin_3 &&
        anon$builtin_3 < df_stringFromRef(res)[anon$builtin_2] - 48 ==>
        df_stringFromRef(this$extension)[anon$builtin_3] ==
        df_stringFromRef(this$extension)[anon$builtin_2 + anon$builtin_3]) &&
      (df_stringFromRef(res)[anon$builtin_2] - 48 ==
      |df_stringFromRef(this$extension)| - anon$builtin_2 ||
      !(df_stringFromRef(this$extension)[anon$builtin_2 +
      (df_stringFromRef(res)[anon$builtin_2] - 48)] ==
      df_stringFromRef(this$extension)[df_stringFromRef(res)[anon$builtin_2] -
      48])))
  ret_0 := res
  goto lbl_ret_0
  label lbl_ret_0
}
